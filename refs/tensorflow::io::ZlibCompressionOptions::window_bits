<dec f='tensorflow/tensorflow/core/lib/io/zlib_compression_options.h' l='74' type='int8'/>
<use f='tensorflow/tensorflow/core/lib/io/zlib_compression_options.h' l='118' u='w' c='_ZN10tensorflow2io22ZlibCompressionOptions3RAWEv'/>
<use f='tensorflow/tensorflow/core/lib/io/zlib_compression_options.h' l='118' u='r' c='_ZN10tensorflow2io22ZlibCompressionOptions3RAWEv'/>
<use f='tensorflow/tensorflow/core/lib/io/zlib_compression_options.h' l='124' u='w' c='_ZN10tensorflow2io22ZlibCompressionOptions4GZIPEv'/>
<use f='tensorflow/tensorflow/core/lib/io/zlib_compression_options.h' l='124' u='r' c='_ZN10tensorflow2io22ZlibCompressionOptions4GZIPEv'/>
<offset>192</offset>
<doc f='tensorflow/tensorflow/core/lib/io/zlib_compression_options.h' l='41'>// The window_bits parameter is the base two logarithm of the window size
  // (the size of the history buffer). Larger values of buffer size result in
  // better compression at the expense of memory usage.
  //
  // Accepted values:
  //
  // 8..15:
  // Normal deflate with zlib header and checksum.
  //
  // -8..-15:
  // Negative values can be used for raw deflate/inflate. In this case,
  // -window_bits determines the window size. deflate() will then generate raw
  // deflate data  with no zlib header or trailer, and will not compute an
  // adler32 check value. inflate() will then process raw deflate data, not
  // looking for a zlib or gzip header, not generating a check value, and not
  // looking for any check values for comparison at the end of the stream.
  //
  // 16 + [8..15]:
  // window_bits can also be greater than 15 for optional gzip encoding. Add 16
  // to window_bits to write a simple gzip header and trailer around the
  // compressed data instead of a zlib wrapper. The gzip header will have no
  // file name, no extra data, no comment, no modification time (set to zero),
  // no header crc, and the operating system will be set to 255 (unknown). If a
  // gzip stream is being written, strm-&gt;adler is a crc32 instead of an adler32.
  //
  // 0:
  // window_bits can also be zero to request that inflate use the window size
  // in the zlib header of the compressed stream.
  //
  // While inflating, window_bits must be greater than or equal to the
  // window_bits value provided used while compressing. If a compressed stream
  // with a larger window size is given as input, inflate() will return with the
  // error code Z_DATA_ERROR instead of trying to allocate a larger window.</doc>
<use f='tensorflow/tensorflow/core/lib/io/zlib_inputstream.cc' l='62' u='r' c='_ZN10tensorflow2io15ZlibInputStream14InitZlibBufferEv'/>
<use f='tensorflow/tensorflow/core/lib/io/zlib_outputbuffer.cc' l='58' u='r' c='_ZN10tensorflow2io16ZlibOutputBuffer4InitEv'/>
