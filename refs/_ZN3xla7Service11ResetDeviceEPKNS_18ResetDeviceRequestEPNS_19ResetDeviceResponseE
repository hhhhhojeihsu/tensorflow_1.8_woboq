<dec f='tensorflow/tensorflow/compiler/xla/service/service.h' l='199' type='tensorflow::Status xla::Service::ResetDevice(const xla::ResetDeviceRequest * arg, xla::ResetDeviceResponse * result)'/>
<ovr f='tensorflow/tensorflow/compiler/xla/service/compile_only_service.h' l='99' c='_ZN3xla18CompileOnlyService11ResetDeviceEPKNS_18ResetDeviceRequestEPNS_19ResetDeviceResponseE'/>
<doc f='tensorflow/tensorflow/compiler/xla/service/service.h' l='190'>// Resets devices, clearing all existing state on all the devices associated
  // with this service (including memory allocated on the devices).
  //
  // ResetDevice may only be called where no previous Execution state on the
  // device is used by the next Execution.
  //
  // ResetDevice should be called before an Execution that expect the device to
  // be in the reset state. For example, if the prior Execution modifies device
  // state (e.g., architectural state) that the next Execution depends on.</doc>
<inh f='tensorflow/tensorflow/compiler/xla/service_interface.h' l='47' c='_ZN3xla16ServiceInterface11ResetDeviceEPKNS_18ResetDeviceRequestEPNS_19ResetDeviceResponseE'/>
<def f='tensorflow/tensorflow/compiler/xla/service/service.cc' l='1441' ll='1444' type='tensorflow::Status xla::Service::ResetDevice(const xla::ResetDeviceRequest * arg, xla::ResetDeviceResponse * result)'/>
