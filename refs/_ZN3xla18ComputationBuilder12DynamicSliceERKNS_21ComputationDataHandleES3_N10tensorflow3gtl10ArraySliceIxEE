<dec f='tensorflow/tensorflow/compiler/xla/client/computation_builder.h' l='253' type='xla::ComputationDataHandle xla::ComputationBuilder::DynamicSlice(const xla::ComputationDataHandle &amp; operand, const xla::ComputationDataHandle &amp; start_indices, tensorflow::gtl::ArraySlice&lt;int64&gt; slice_sizes)'/>
<doc f='tensorflow/tensorflow/compiler/xla/client/computation_builder.h' l='244'>// Enqueues a slice operation onto the computation that slices the &apos;operand&apos;
  // from dynamic start indices which are passed in &apos;start_indices&apos;.
  // The size of the slice in each dimension is passed in &apos;slice_sizes&apos;,
  // which specify the end point of exclusive slice intervals in each
  // dimension [start, start + size).
  // The shape of &apos;start_indices&apos; must be rank == 1, with dimension size
  // equal to the rank of the &apos;operand&apos;.
  // Slice index calculations are computed modulo input dimension sizes to
  // prevent dynamic start indices from generating out-of-bound array accesses.</doc>
<use f='tensorflow/tensorflow/compiler/tf2xla/kernels/gather_op.cc' l='127' u='c' c='_ZN10tensorflow9XlaGatherERKN3xla21ComputationDataHandleERKNS_11TensorShapeES3_S4_xbNS_8DataTypeES7_PNS0_18ComputationBuilderEPS1_'/>
<use f='tensorflow/tensorflow/compiler/tf2xla/kernels/gather_op.cc' l='130' u='c' c='_ZN10tensorflow9XlaGatherERKN3xla21ComputationDataHandleERKNS_11TensorShapeES3_S4_xbNS_8DataTypeES7_PNS0_18ComputationBuilderEPS1_'/>
<use f='tensorflow/tensorflow/compiler/tf2xla/kernels/gather_op.cc' l='139' u='c' c='_ZN10tensorflow9XlaGatherERKN3xla21ComputationDataHandleERKNS_11TensorShapeES3_S4_xbNS_8DataTypeES7_PNS0_18ComputationBuilderEPS1_'/>
<use f='tensorflow/tensorflow/compiler/tf2xla/kernels/reverse_sequence_op.cc' l='105' u='c' c='_ZN10tensorflow12_GLOBAL__N_117ReverseSequenceOp7CompileEPNS_18XlaOpKernelContextE'/>
<use f='tensorflow/tensorflow/compiler/tf2xla/kernels/reverse_sequence_op.cc' l='137' u='c' c='_ZN10tensorflow12_GLOBAL__N_117ReverseSequenceOp7CompileEPNS_18XlaOpKernelContextE'/>
<use f='tensorflow/tensorflow/compiler/tf2xla/kernels/slice_op.cc' l='110' u='c' c='_ZN10tensorflow12_GLOBAL__N_17SliceOp7CompileEPNS_18XlaOpKernelContextE'/>
<use f='tensorflow/tensorflow/compiler/tf2xla/kernels/stack_ops.cc' l='220' u='c' c='_ZN10tensorflow12_GLOBAL__N_110StackPopOp7CompileEPNS_18XlaOpKernelContextE'/>
<use f='tensorflow/tensorflow/compiler/tf2xla/kernels/tensor_array_ops.cc' l='132' u='c' c='_ZN10tensorflow12_GLOBAL__N_115DynamicAddSliceEPN3xla18ComputationBuilderERKNS1_21ComputationDataHandleES6_RKNS_3gtl10ArraySliceIxEES6_'/>
<use f='tensorflow/tensorflow/compiler/tf2xla/kernels/tensor_array_ops.cc' l='274' u='c' c='_ZN10tensorflow12_GLOBAL__N_117TensorArrayReadOp7CompileEPNS_18XlaOpKernelContextE'/>
<use f='tensorflow/tensorflow/compiler/tf2xla/lib/scatter.cc' l='131' u='c' c='_ZN10tensorflow10XlaScatterERKN3xla21ComputationDataHandleES3_S3_bRKSt8functionIFS1_S1_S1_PNS0_18ComputationBuilderEEES6_'/>
<use f='tensorflow/tensorflow/compiler/tf2xla/lib/scatter.cc' l='135' u='c' c='_ZN10tensorflow10XlaScatterERKN3xla21ComputationDataHandleES3_S3_bRKSt8functionIFS1_S1_S1_PNS0_18ComputationBuilderEEES6_'/>
<use f='tensorflow/tensorflow/compiler/tf2xla/lib/scatter.cc' l='159' u='c' c='_ZN10tensorflow10XlaScatterERKN3xla21ComputationDataHandleES3_S3_bRKSt8functionIFS1_S1_S1_PNS0_18ComputationBuilderEEES6_'/>
<use f='tensorflow/tensorflow/compiler/tf2xla/lib/scatter.cc' l='173' u='c' c='_ZN10tensorflow10XlaScatterERKN3xla21ComputationDataHandleES3_S3_bRKSt8functionIFS1_S1_S1_PNS0_18ComputationBuilderEEES6_'/>
<use f='tensorflow/tensorflow/compiler/tf2xla/lib/triangular_solve.cc' l='496' u='c' c='_ZN10tensorflow26TriangularSolveLeftLookingEPN3xla18ComputationBuilderERKNS0_21ComputationDataHandleES5_bb'/>
<def f='tensorflow/tensorflow/compiler/xla/client/computation_builder.cc' l='295' ll='307' type='xla::ComputationDataHandle xla::ComputationBuilder::DynamicSlice(const xla::ComputationDataHandle &amp; operand, const xla::ComputationDataHandle &amp; start_indices, tensorflow::gtl::ArraySlice&lt;int64&gt; slice_sizes)'/>
