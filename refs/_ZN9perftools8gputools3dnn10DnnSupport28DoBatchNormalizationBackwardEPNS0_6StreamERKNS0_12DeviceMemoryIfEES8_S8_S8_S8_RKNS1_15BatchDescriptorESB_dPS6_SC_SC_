<def f='tensorflow/tensorflow/stream_executor/dnn.h' l='975' ll='984' type='bool perftools::gputools::dnn::DnnSupport::DoBatchNormalizationBackward(perftools::gputools::Stream * stream, const DeviceMemory&lt;float&gt; &amp; y_backprop, const DeviceMemory&lt;float&gt; &amp; x, const DeviceMemory&lt;float&gt; &amp; scale, const DeviceMemory&lt;float&gt; &amp; mean, const DeviceMemory&lt;float&gt; &amp; inv_var, const dnn::BatchDescriptor &amp; x_desc, const dnn::BatchDescriptor &amp; scale_offset_desc, const double epsilon, DeviceMemory&lt;float&gt; * x_backprop, DeviceMemory&lt;float&gt; * scale_backprop, DeviceMemory&lt;float&gt; * offset_backprop)'/>
<doc f='tensorflow/tensorflow/stream_executor/dnn.h' l='958'>// Performs a single-precision backward batch normalization gradient
  // computation operation onto the stream.
  //
  // Arguments:
  //  stream: borrowed pointer to the stream that the batch normalization
  //    gradient computation operation should be enqueued onto.
  //  y_backprop: gradient with regard to output y.
  //  x: input data.
  //  scale: scaling parameters.
  //  inv_var: 1/sqrt(epsilon + variance) of x.
  //  x_desc: dimensions of the input data, which is the same as the dimensions
  //    of the output.
  //  scale_offset_desc: dimensions of scale and offset.
  //  epsilon: a small floating point number added to the variance of x.
  //  x_backprop: gradient with respect to input x.
  //  scale_backprop: gradient with respect to scale.
  //  offset_backprop: gradient with respect to offset.</doc>
<use f='tensorflow/tensorflow/stream_executor/stream.cc' l='357' u='c' c='_ZN9perftools8gputools6Stream30ThenBatchNormalizationBackwardERKNS0_12DeviceMemoryIfEES5_S5_S5_S5_RKNS0_3dnn15BatchDescriptorES9_dPS3_SA_SA_'/>
