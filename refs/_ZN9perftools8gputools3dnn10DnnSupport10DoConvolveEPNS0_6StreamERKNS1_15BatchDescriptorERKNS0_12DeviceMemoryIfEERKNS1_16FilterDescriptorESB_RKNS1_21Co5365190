<dec f='tensorflow/tensorflow/stream_executor/dnn.h' l='1162' type='bool perftools::gputools::dnn::DnnSupport::DoConvolve(perftools::gputools::Stream * stream, const dnn::BatchDescriptor &amp; input_descriptor, const DeviceMemory&lt;float&gt; &amp; input_data, const dnn::FilterDescriptor &amp; filter_descriptor, const DeviceMemory&lt;float&gt; &amp; filter_data, const dnn::ConvolutionDescriptor &amp; convolution_descriptor, const dnn::BatchDescriptor &amp; output_descriptor, DeviceMemory&lt;float&gt; * output_data, perftools::gputools::ScratchAllocator * scratch_allocator, const dnn::AlgorithmConfig &amp; algorithm_config, perftools::gputools::dnn::ProfileResult * output_profile_result)'/>
<doc f='tensorflow/tensorflow/stream_executor/dnn.h' l='1124'>// Enqueues a single-precision convolution operation onto the stream.
  //
  // Arguments (all borrowed):
  //  stream: borrowed pointer to the stream that the &apos;convolve&apos; operation
  //    should be enqueued onto.
  //  input_descriptor: dimensions of the input layer.
  //  input_data: un-owned device memory region which contains the
  //    convolution input.
  //  filter_descriptor: dimensions of the convolution filter.
  //  convolution_descriptor: stride of the convolution filter.
  //  input. This can be DeviceMemory pointing to NULL only when activation_mode
  //  is kNone.
  //  output_descriptor: dimensions of the output layer.
  //  output_data: un-owned device memory region in which to place the
  //    convolution result.
  //  scratch_allocator: un-owned, may-be-null object that may allocate scratch
  //    space in order to speed up the convolution operation.
  //  algorithm: an integer to specify which algorithm should be used for the
  //    operation. kDefaultAlgorithm means the system will pick an algorithm
  //    by default. The coding of the algorithm is be interpreted by the
  //    underlying implementation.
  //  output_profile_result: the output profile result for this call. The
  //    profiling is only enabled when this is not nullptr.
  //
  // input_descriptor, filter_descriptor, convolution_descriptor and
  // output_descriptor together specify exactly how the convolution is aligned
  // with the input data:
  //
  // * (input dimensions - filter size + 1) / filter stride == output dimensions
  //   corresponds to dist_belief padding = VALID, i.e. the input is not padded.
  // * input dimensions / filter stride == output dimensions
  //   corresponds to dist_belief padding = SAME, i.e. input and output are the
  //   same size - this requires padding the input.
  // * (input dimensions + filter size - 1) / filter stride == output dimensions
  //   corresponds to dist_belief padding = FULL, i.e. the output is sized so
  //   that if the inverse of the filter is applied to the output in VALID mode
  //   the result is the same size as the input - this requires even more
  //   padding of the input.</doc>
<use f='tensorflow/tensorflow/stream_executor/stream.cc' l='560' u='c' c='_ZN9perftools8gputools6Stream23ThenConvolveWithScratchERKNS0_3dnn15BatchDescriptorERKNS0_12DeviceMemoryIfEERKNS2_16FilterDescriptorES9_RKNS2_21Convolu2086933'/>
<use f='tensorflow/tensorflow/stream_executor/stream.cc' l='735' u='c' c='_ZN9perftools8gputools6Stream25ThenConvolveWithAlgorithmERKNS0_3dnn15BatchDescriptorERKNS0_12DeviceMemoryIfEERKNS2_16FilterDescriptorES9_RKNS2_21Convo5150463'/>
