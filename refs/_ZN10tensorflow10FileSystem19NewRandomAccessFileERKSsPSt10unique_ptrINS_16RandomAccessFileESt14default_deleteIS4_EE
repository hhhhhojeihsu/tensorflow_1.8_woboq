<dec f='tensorflow/tensorflow/core/platform/file_system.h' l='59' type='tensorflow::Status tensorflow::FileSystem::NewRandomAccessFile(const string &amp; fname, std::unique_ptr&lt;RandomAccessFile&gt; * result)'/>
<doc f='tensorflow/tensorflow/core/platform/file_system.h' l='47'>/// \brief Creates a brand new random access read-only file with the
  /// specified name.
  ///
  /// On success, stores a pointer to the new file in
  /// *result and returns OK.  On failure stores NULL in *result and
  /// returns non-OK.  If the file does not exist, returns a non-OK
  /// status.
  ///
  /// The returned file may be concurrently accessed by multiple threads.
  ///
  /// The ownership of the returned RandomAccessFile is passed to the caller
  /// and the object should be deleted when is not used.</doc>
<use f='tensorflow/tensorflow/core/platform/env.cc' l='133' u='c' c='_ZN10tensorflow3Env19NewRandomAccessFileERKSsPSt10unique_ptrINS_16RandomAccessFileESt14default_deleteIS4_EE'/>
<use f='tensorflow/tensorflow/core/platform/env.cc' l='425' u='c' c='_ZN10tensorflow18FileSystemCopyFileEPNS_10FileSystemERKSsS1_S3_'/>
<ovr f='tensorflow/tensorflow/core/platform/posix/posix_file_system.cc' l='142' c='_ZN10tensorflow15PosixFileSystem19NewRandomAccessFileERKSsPSt10unique_ptrINS_16RandomAccessFileESt14default_deleteIS4_EE'/>
<ovr f='tensorflow/tensorflow/core/util/memmapped_file_system.cc' l='95' c='_ZN10tensorflow19MemmappedFileSystem19NewRandomAccessFileERKSsPSt10unique_ptrINS_16RandomAccessFileESt14default_deleteIS4_EE'/>
