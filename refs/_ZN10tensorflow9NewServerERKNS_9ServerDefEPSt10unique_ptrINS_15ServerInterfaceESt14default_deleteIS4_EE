<dec f='tensorflow/tensorflow/core/distributed_runtime/server_lib.h' l='93' type='tensorflow::Status tensorflow::NewServer(const tensorflow::ServerDef &amp; server_def, std::unique_ptr&lt;ServerInterface&gt; * out_server)'/>
<doc f='tensorflow/tensorflow/core/distributed_runtime/server_lib.h' l='91'>// Creates a server based on the given `server_def`, and stores it in
// `*out_server`. Returns OK on success, otherwise returns an error.</doc>
<def f='tensorflow/tensorflow/core/distributed_runtime/server_lib.cc' l='66' ll='71' type='tensorflow::Status tensorflow::NewServer(const tensorflow::ServerDef &amp; server_def, std::unique_ptr&lt;ServerInterface&gt; * out_server)'/>
<doc f='tensorflow/tensorflow/core/distributed_runtime/server_lib.cc' l='64'>// Creates a server based on the given `server_def`, and stores it in
// `*out_server`. Returns OK on success, otherwise returns an error.</doc>
