<dec f='tensorflow/tensorflow/core/framework/tensor_slice.h' l='168' type='void tensorflow::TensorSlice::ComputeRelative(const tensorflow::TensorSlice &amp; sub, tensorflow::TensorSlice * relative) const'/>
<use f='tensorflow/tensorflow/core/util/tensor_slice_util.h' l='169' u='c' c='_ZN10tensorflow12_GLOBAL__N_1L36CopyDataFromTensorSliceToTensorSliceERKNS_11TensorShapeERKNS_11TensorSliceES6_PKT_PT0_'/>
<use f='tensorflow/tensorflow/core/util/tensor_slice_util.h' l='170' u='c' c='_ZN10tensorflow12_GLOBAL__N_1L36CopyDataFromTensorSliceToTensorSliceERKNS_11TensorShapeERKNS_11TensorSliceES6_PKT_PT0_'/>
<doc f='tensorflow/tensorflow/core/framework/tensor_slice.h' l='150'>// Given slice &quot;sub&quot; where &quot;sub&quot; is fully contained in *this,
  // (meaning that the intersection of &quot;sub&quot; and *this equals &quot;sub&quot;), computes
  // the &quot;relative&quot; slice of &quot;sub&quot; with respect to *this.
  //
  // In other words, if we use A&gt;S to denote slicing a shape S with a slice A,
  // then the function is computing a slice X such that:
  //   X &gt; (this &gt; S) = sub &gt; S
  // for any shape S.
  //
  // In general, along every dimension, the start of the relative slice is the
  // start of the &quot;sub&quot; slice minus the start of *this; the length of the
  // relative slice is the length of the &quot;sub&quot; slice.
  //
  // For example, say we have a shape of {3, 4, 5}, &quot;this&quot; is 0,2:-:1,2, and
  // &quot;sub&quot; is 1,1:2:2,1,2, then the related slice is 1,1:2,2:0,2.
  //
  // The caller needs to make sure that &quot;sub&quot; is indeed a sub-slice of *this;
  // otherwise the result is undefined.</doc>
<def f='tensorflow/tensorflow/core/framework/tensor_slice.cc' l='196' ll='211' type='void tensorflow::TensorSlice::ComputeRelative(const tensorflow::TensorSlice &amp; sub, tensorflow::TensorSlice * relative) const'/>
