<dec f='tensorflow/tensorflow/core/util/tensor_bundle/tensor_bundle.h' l='175' type='tensorflow::Status tensorflow::MergeBundles(tensorflow::Env * env, gtl::ArraySlice&lt;string&gt; prefixes, tensorflow::StringPiece merged_prefix)'/>
<doc f='tensorflow/tensorflow/core/util/tensor_bundle/tensor_bundle.h' l='162'>// Merges a set of bundles (given their prefixes) into a single bundle with the
// given &quot;merged_prefix&quot;.  The merged metadata is guaranteed to be consistent.
//
// If there are N bundles in &quot;prefixes&quot;, during the merge the data files will be
// renamed to contain a proper sharded file spec, with num_shards set to the sum
// of num_shards across the N input bundles.
//
// The caller should only rely on the metadata file of the merged bundle to
// query information about a tensor.  In particular, this function does not
// guarantee not to re-order the input data files.
//
// Once merged, makes a best effort to delete the old metadata files.
// Returns OK iff all bundles are successfully merged.</doc>
<use f='tensorflow/tensorflow/core/kernels/save_restore_v2_ops.cc' l='220' u='c' c='_ZN10tensorflow18MergeV2Checkpoints7ComputeEPNS_15OpKernelContextE'/>
<def f='tensorflow/tensorflow/core/util/tensor_bundle/tensor_bundle.cc' l='647' ll='694' type='tensorflow::Status tensorflow::MergeBundles(tensorflow::Env * env, gtl::ArraySlice&lt;string&gt; prefixes, tensorflow::StringPiece merged_prefix)'/>
