<dec f='tensorflow/tensorflow/core/framework/variant_op_registry.h' l='261' type='tensorflow::Status tensorflow::VariantDeviceCopy(const tensorflow::VariantDeviceCopyDirection direction, const tensorflow::Variant &amp; from, tensorflow::Variant * to, const UnaryVariantOpRegistry::AsyncTensorDeviceCopyFn &amp; copy_fn)'/>
<use f='tensorflow/tensorflow/core/common_runtime/copy_tensor.cc' l='92' u='c' c='_ZN10tensorflow12_GLOBAL__N_116CopyHostToDeviceEPKNS_6TensorEPNS_9AllocatorES5_NS_11StringPieceEPNS_6DeviceEPS1_PNS_13DeviceContextESt8functionIFvRKNS_6StatusEEE'/>
<use f='tensorflow/tensorflow/core/common_runtime/copy_tensor.cc' l='150' u='c' c='_ZN10tensorflow12_GLOBAL__N_116CopyDeviceToHostEPKNS_6TensorEPNS_9AllocatorES5_NS_11StringPieceEPNS_6DeviceEPS1_PNS_13DeviceContextESt8functionIFvRKNS_6StatusEEE'/>
<use f='tensorflow/tensorflow/core/common_runtime/copy_tensor.cc' l='215' u='c' c='_ZN10tensorflow12_GLOBAL__N_118CopyDeviceToDeviceEPFvPNS_13DeviceContextES2_PNS_6DeviceES4_NS_19AllocatorAttributesES5_PKNS_6TensorEPS6_St8functionIFv6274680'/>
<doc f='tensorflow/tensorflow/core/framework/variant_op_registry.h' l='249'>// Copies a variant between CPU&lt;-&gt;GPU, or between GPU&lt;-&gt;GPU.
// The variant &apos;from&apos; must have a registered DeviceCopyFn for the
// given direction.  The returned variant &apos;to&apos; will have
// (some subset of its) tensors stored on destination according to the
// registered DeviceCopyFn function for the given direction.  Returns
// an Internal error if the Variant does not have a registered
// DeviceCopyFn function for the given direction, or if initiating the
// copy fails.
//
// REQUIRES:
//   &apos;to&apos; is not null.
//</doc>
<def f='tensorflow/tensorflow/core/framework/variant_op_registry.cc' l='167' ll='180' type='tensorflow::Status tensorflow::VariantDeviceCopy(const tensorflow::VariantDeviceCopyDirection direction, const tensorflow::Variant &amp; from, tensorflow::Variant * to, const UnaryVariantOpRegistry::AsyncTensorDeviceCopyFn &amp; copy_fn)'/>
