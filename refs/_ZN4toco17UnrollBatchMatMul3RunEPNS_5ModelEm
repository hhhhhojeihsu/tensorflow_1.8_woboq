<dec f='tensorflow/tensorflow/contrib/lite/toco/graph_transformations/graph_transformations.h' l='110' type='bool toco::UnrollBatchMatMul::Run(toco::Model * model, std::size_t op_index)'/>
<inh f='tensorflow/tensorflow/contrib/lite/toco/graph_transformations/graph_transformations.h' l='30' c='_ZN4toco19GraphTransformation3RunEPNS_5ModelEm'/>
<def f='tensorflow/tensorflow/contrib/lite/toco/graph_transformations/unroll_batch_matmul.cc' l='39' ll='170' type='bool toco::UnrollBatchMatMul::Run(toco::Model * model, std::size_t op_index)'/>
<doc f='tensorflow/tensorflow/contrib/lite/toco/graph_transformations/unroll_batch_matmul.cc' l='27'>// Unrolls a BatchMatMul on the batch dimension.
// We need to slice each batch out of the inputs, matmul them individually, then
// stack them all back together at the end.
//
// This transform effectively looks like:
//  result_slices = []
//  for bat in B:
//    slice_a = tf.reshape(tf.slice(a, [bat, 0, 0], [1, M, N]), [M, N])
//    slice_b = tf.reshape(tf.slice(b, [bat, 0, 0], [1, M, N]), [M, N])
//    slice_c = tf.matmul(slice_a, slice_b)
//    result_slices[bat] = slice_c
//  result = tf.stack(result_slices)</doc>
