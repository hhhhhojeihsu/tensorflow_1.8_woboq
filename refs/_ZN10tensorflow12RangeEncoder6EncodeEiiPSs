<dec f='tensorflow/tensorflow/contrib/coder/kernels/range_coder.h' l='49' type='void tensorflow::RangeEncoder::Encode(int32 lower, int32 upper, string * sink)'/>
<def f='tensorflow/tensorflow/contrib/coder/kernels/range_coder.cc' l='37' ll='260' type='void tensorflow::RangeEncoder::Encode(int32 lower, int32 upper, string * sink)'/>
<doc f='tensorflow/tensorflow/contrib/coder/kernels/range_coder.h' l='34'>// Encodes a half-open interval [lower / 2^precision, upper / 2^precision).
  // Suppose each character to be encoded is from an integer-valued
  // distribution. When encoding a random character x0, the arguments lower and
  // upper represent
  //   Pr(X &lt; x0) = lower / 2^precision,
  //   Pr(X &lt; x0 + 1) = upper / 2^precision,
  // where X is a random variable following the distribution.
  //
  // For example, assume that the distribution has possible outputs 0, 1, 2, ...
  // To encode value 0, lower = 0 and upper = Pr(X = 0).
  // To encode value 1, lower = Pr(X = 0) and upper = Pr(X = 0 or 1).
  // To encode value 2, lower = Pr(X = 0 or 1) and upper = Pr(X = 0, 1, or 2).
  // ...
  //
  // REQUIRES: 0 &lt;= lower &lt; upper &lt;= 2^precision.</doc>
<use f='tensorflow/tensorflow/contrib/coder/kernels/range_coder_ops.cc' l='205' u='c' c='_ZNK10tensorflow12_GLOBAL__N_113RangeEncodeOp15RangeEncodeImplEN5Eigen9TensorMapINS2_6TensorIKsLi1ELi1ElEELi16ENS2_11MakePointerEEENS_3gtl10ArraySlice3108361'/>
