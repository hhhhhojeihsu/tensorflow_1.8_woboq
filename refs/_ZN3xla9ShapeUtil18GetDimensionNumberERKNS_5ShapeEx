<dec f='tensorflow/tensorflow/compiler/xla/shape_util.h' l='300' type='static int64 xla::ShapeUtil::GetDimensionNumber(const xla::Shape &amp; shape, int64 dimension_number)'/>
<doc f='tensorflow/tensorflow/compiler/xla/shape_util.h' l='292'>// Resolves a dimension number, supporting negative indexing.
  //
  // Negative indexing has similar semantics to Python. For an N-dimensional
  // array, dimension -1 is equivalent to dimension N-1, -2 is equivalent to
  // N-2, and so on.
  //
  // This function always returns a positive dimension number for any given
  // dimension_number (which itself can be negative).</doc>
<use f='tensorflow/tensorflow/compiler/xla/service/cpu/dot_op_emitter.cc' l='749' u='c' c='_ZN3xla3cpu12DotOpEmitter4EmitEv'/>
<use f='tensorflow/tensorflow/compiler/xla/service/cpu/dot_op_emitter.cc' l='754' u='c' c='_ZN3xla3cpu12DotOpEmitter4EmitEv'/>
<use f='tensorflow/tensorflow/compiler/xla/shape_util.cc' l='659' u='c' c='_ZN3xla9ShapeUtil12GetDimensionERKNS_5ShapeEx'/>
<def f='tensorflow/tensorflow/compiler/xla/shape_util.cc' l='662' ll='669' type='static int64 xla::ShapeUtil::GetDimensionNumber(const xla::Shape &amp; shape, int64 dimension_number)'/>
<doc f='tensorflow/tensorflow/compiler/xla/shape_util.cc' l='662'>/* static */</doc>
