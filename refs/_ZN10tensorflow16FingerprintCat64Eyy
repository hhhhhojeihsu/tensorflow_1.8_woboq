<def f='tensorflow/tensorflow/core/platform/fingerprint.h' l='67' ll='75' type='uint64 tensorflow::FingerprintCat64(const uint64 fp1, const uint64 fp2)'/>
<doc f='tensorflow/tensorflow/core/platform/fingerprint.h' l='55'>// This concatenates two 64-bit fingerprints. It is a convenience function to
// get a fingerprint for a combination of already fingerprinted components. For
// example this code is used to concatenate the hashes from each of the features
// on sparse crosses.
//
// One shouldn&apos;t expect FingerprintCat64(Fingerprint64(x), Fingerprint64(y))
// to indicate anything about FingerprintCat64(StrCat(x, y)). This operation
// is not commutative.
//
// From a security standpoint, we don&apos;t encourage this pattern to be used
// for everything as it is vulnerable to length-extension attacks and it
// is easier to compute multicollisions.</doc>
<use f='tensorflow/tensorflow/c/eager/runtime.cc' l='175' u='c' c='_ZN10tensorflow12_GLOBAL__N_117FingerprintCat128ERKNS_9Fprint128ES3_'/>
<use f='tensorflow/tensorflow/c/eager/runtime.cc' l='176' u='c' c='_ZN10tensorflow12_GLOBAL__N_117FingerprintCat128ERKNS_9Fprint128ES3_'/>
<use f='tensorflow/tensorflow/c/eager/runtime.cc' l='175' u='c' c='_ZN10tensorflow12_GLOBAL__N_117FingerprintCat128ERKNS_9Fprint128ES3_'/>
<use f='tensorflow/tensorflow/c/eager/runtime.cc' l='176' u='c' c='_ZN10tensorflow12_GLOBAL__N_117FingerprintCat128ERKNS_9Fprint128ES3_'/>
<use f='tensorflow/tensorflow/contrib/layers/kernels/sparse_feature_cross_kernel.cc' l='241' u='c' c='_ZNK10tensorflow12_GLOBAL__N_113HashCrosserV28GenerateExRKSt6vectorIiSaIiEE'/>
<use f='tensorflow/tensorflow/core/kernels/sparse_cross_op.cc' l='206' u='c' c='_ZNK10tensorflow12_GLOBAL__N_111HashCrosser8GenerateExRKSt6vectorIiSaIiEE'/>
