<dec f='tensorflow/tensorflow/compiler/xla/service/allocation_tracker.h' l='48' type='StatusOr&lt;xla::GlobalDataHandle&gt; xla::AllocationTracker::Register(std::unique_ptr&lt;ShapedBuffer&gt; shaped_buffer, const string &amp; tag)'/>
<doc f='tensorflow/tensorflow/compiler/xla/service/allocation_tracker.h' l='45'>// Registers a shaped buffer of device memory, and returns a corresponding
  // handle that can be used for talking to XLA clients. The given shaped buffer
  // will be treated as the buffer corresponding to the only replica.</doc>
<def f='tensorflow/tensorflow/compiler/xla/service/allocation_tracker.cc' l='33' ll='40' type='StatusOr&lt;xla::GlobalDataHandle&gt; xla::AllocationTracker::Register(std::unique_ptr&lt;ShapedBuffer&gt; shaped_buffer, const string &amp; tag)'/>
<use f='tensorflow/tensorflow/compiler/xla/service/service.cc' l='712' u='c' c='_ZN3xla7Service24ExecuteAndRegisterResultEPNS_10ExecutableEN10tensorflow3gtl10ArraySliceISt6vectorIPKNS_12ShapedBufferESaIS9_EEEEPNS_7BackendERKSsPNS_16ExecutionProfileE'/>
