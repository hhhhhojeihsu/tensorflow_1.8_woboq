<dec f='tensorflow/tensorflow/core/framework/tensor_util.h' l='54' type='tensorflow::Status tensorflow::tensor::Split(const tensorflow::Tensor &amp; tensor, const gtl::ArraySlice&lt;int64&gt; &amp; sizes, std::vector&lt;Tensor&gt; * result)'/>
<doc f='tensorflow/tensorflow/core/framework/tensor_util.h' l='44'>// Splits &apos;tensor&apos; into &apos;sizes.size()&apos; individual tensors, along the 0th
// dimension. The ith output tensor has 0th-dimension size &apos;sizes[i]&apos;.
//
// REQUIRES: &apos;tensor&apos; must have at least one dimension.
// REQUIRES: &apos;tensor.dim_size(0)&apos; must equal the sum of the elements of &apos;sizes&apos;.
// REQUIRES: &apos;tensor&apos; must point to data stored in CPU memory.
// REQUIRES: &apos;tensor&apos; must be a Tensor of a copy-able type if it is not
//           appropriately memory-aligned.
//
// Split() and Concat() are inverse operations.</doc>
<def f='tensorflow/tensorflow/core/framework/tensor_util.cc' l='109' ll='169' type='tensorflow::Status tensorflow::tensor::Split(const tensorflow::Tensor &amp; tensor, const gtl::ArraySlice&lt;int64&gt; &amp; sizes, std::vector&lt;Tensor&gt; * result)'/>
