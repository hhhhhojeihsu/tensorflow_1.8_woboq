<def f='tensorflow/tensorflow/core/framework/dataset.h' l='253' ll='318'/>
<size>128</size>
<doc f='tensorflow/tensorflow/core/framework/dataset.h' l='238'>// A cut-down version of OpKernelContext for running computations in
// iterators. Note that we cannot simply use OpKernelContext here
// because we might run computation in an iterator whose lifetime is
// not nested within the lifetime of a single OpKernelContext
// (e.g. asynchronous prefetching).
//
// TODO(mrry): We will probably need to support more of
// OpKernelContext here. For example, should allocation be handled by
// the IteratorContext?
// TODO(mrry): We&apos;re making some daring assumptions about the lifetime
// of the runner passed in here. A runner will be deleted when the original
// step ends, but all existing runners only close over session-lifetime (or
// longer-lived) state, so we can make a copy of the function. There&apos;s nothing
// in the definition of the API from which we took the runner to guarantee that
// what we are doing is safe. We should formalize the properties here.</doc>
<fun r='_ZN10tensorflow15IteratorContextC1ENS0_6ParamsE'/>
<fun r='_ZNK10tensorflow15IteratorContext3envEv'/>
<fun r='_ZN10tensorflow15IteratorContext6runnerEv'/>
<fun r='_ZN10tensorflow15IteratorContext16stats_aggregatorEv'/>
<fun r='_ZN10tensorflow15IteratorContext16function_libraryEv'/>
<fun r='_ZN10tensorflow15IteratorContext3libEv'/>
<fun r='_ZN10tensorflow15IteratorContext7set_libEPNS_22FunctionLibraryRuntimeE'/>
<fun r='_ZN10tensorflow15IteratorContext9allocatorENS_19AllocatorAttributesE'/>
<fun r='_ZN10tensorflow15IteratorContext16allocator_getterEv'/>
<fun r='_ZN10tensorflow15IteratorContext23stats_aggregator_getterEv'/>
<mbr r='tensorflow::IteratorContext::params_' o='0' t='tensorflow::IteratorContext::Params'/>
