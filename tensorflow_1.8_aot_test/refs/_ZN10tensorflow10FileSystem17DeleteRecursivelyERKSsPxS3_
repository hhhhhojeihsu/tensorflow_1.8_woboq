<dec f='tensorflow/tensorflow/core/platform/file_system.h' l='179' type='tensorflow::Status tensorflow::FileSystem::DeleteRecursively(const string &amp; dirname, int64 * undeleted_files, int64 * undeleted_dirs)'/>
<doc f='tensorflow/tensorflow/core/platform/file_system.h' l='168'>/// \brief Deletes the specified directory and all subdirectories and files
  /// underneath it. undeleted_files and undeleted_dirs stores the number of
  /// files and directories that weren&apos;t deleted (unspecified if the return
  /// status is not OK).
  /// REQUIRES: undeleted_files, undeleted_dirs to be not null.
  /// Typical return codes:
  ///  * OK - dirname exists and we were able to delete everything underneath.
  ///  * NOT_FOUND - dirname doesn&apos;t exist
  ///  * PERMISSION_DENIED - dirname or some descendant is not writable
  ///  * UNIMPLEMENTED - Some underlying functions (like Delete) are not
  ///                    implemented</doc>
<use f='tensorflow/tensorflow/core/platform/env.cc' l='262' u='c' c='_ZN10tensorflow3Env17DeleteRecursivelyERKSsPxS3_'/>
<def f='tensorflow/tensorflow/core/platform/file_system.cc' l='74' ll='136' type='tensorflow::Status tensorflow::FileSystem::DeleteRecursively(const string &amp; dirname, int64 * undeleted_files, int64 * undeleted_dirs)'/>
