<dec f='tensorflow/tensorflow/compiler/xla/util.h' l='424' type='std::vector&lt;std::pair&lt;int64, int64&gt; &gt; xla::CommonFactors(tensorflow::gtl::ArraySlice&lt;int64&gt; a, tensorflow::gtl::ArraySlice&lt;int64&gt; b)'/>
<doc f='tensorflow/tensorflow/compiler/xla/util.h' l='413'>// Returns the start indices of consecutive non-overlapping subsequences of `a`
// and `b` with the same product, i.e. `(i, j)` so
// • a = {a[0 = i_0], ..., a[i_1 - 1], a[i_1], ... , a[i_2 - 1], ...}
// • b = {b[0 = j_0], ..., b[j_1 - 1], b[j_1], ... , b[j_2 - 1], ...}
// • ∀ k . 0 &lt;= k &lt; CommonFactors(a, b).size - 1 =&gt;
//         a[i_k] × a[i_k + 1] × ... × a[i_(k+1) - 1] =
//         b[j_k] × b[j_k + 1] × ... × b[j_(k+1) - 1]
// where `CommonFactors(a, b)[CommonFactors(a, b).size - 1] = (a.size, b.size)`
//
// If the given shapes have non-zero size, returns the bounds of the shortest
// possible such subsequences; else, returns `{(0, 0), (a.size, b.size)}`.</doc>
<use f='tensorflow/tensorflow/compiler/xla/service/llvm_ir/ir_array.cc' l='130' u='c' c='_ZNK3xla7llvm_ir7IrArray5Index20SourceIndexOfReshapeERKNS_5ShapeES5_PN4llvm9IRBuilderINS6_14ConstantFolderENS6_24IRBuilderDefaultInserterEEE'/>
<use f='tensorflow/tensorflow/compiler/xla/shape_util.cc' l='1069' u='c' c='_ZN3xla9ShapeUtil29DimensionsUnmodifiedByReshapeERKNS_5ShapeES3_'/>
<def f='tensorflow/tensorflow/compiler/xla/util.cc' l='298' ll='338' type='std::vector&lt;std::pair&lt;int64, int64&gt; &gt; xla::CommonFactors(tensorflow::gtl::ArraySlice&lt;int64&gt; a, tensorflow::gtl::ArraySlice&lt;int64&gt; b)'/>
