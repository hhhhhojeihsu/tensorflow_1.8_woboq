<def f='tensorflow/tensorflow/core/graph/graph_def_builder.h' l='66' ll='182'/>
<size>792</size>
<doc f='tensorflow/tensorflow/core/graph/graph_def_builder.h' l='30'>// Given a function like:
//   namespace ops {
//   Node* Identity(NodeOut input, const GraphDefBuilder::Options&amp; opts) {
//     if (opts.HaveError()) return nullptr;
//     static const string kOpName = &quot;Identity&quot;;
//     NodeBuilder node_builder(opts.GetNameForOp(kOpName), kOpName,
//                              opts.op_registry());
//     node_builder.Input(input);
//     return opts.FinalizeBuilder(&amp;node_builder);
//   }
//   }  // namespace ops
//
//   // Or, alternatively:
//   namespace ops {
//   Node* Identity(NodeOut input, const GraphDefBuilder::Options&amp; opts) {
//     static const string kOpName = &quot;Identity&quot;;
//     return UnaryOp(kOpName, input, opts);
//   }
//   }  // namespace ops
//
// You call it like:
//   GraphDefBuilder b;
//   using namespace ::tensorflow::ops;  // NOLINT(build/namespaces)
//   Node* na = Const(7, b.opts());
//   // Note: WithName() returns a copy, opts is unchanged.
//   Node* nb = Const(5, b.opts().WithName(&quot;control-input&quot;));
//   Node* nc = Identity(na, b.opts().WithControlInput(nb));
//   GraphDef graph_def;
//   Status status = b.ToGraphDef(&amp;graph_def);
//   if (!status.ok()) { /* Handle error */ }
//
// In tests you can skip the status handling via:
//   GraphDefBuilder b(GraphDefBuilder::kFailImmediately);
//   ...
//   b.ToGraphDef(&amp;graph_def);</doc>
<fun r='_ZN10tensorflow15GraphDefBuilderC1EPKNS_19OpRegistryInterfaceE'/>
<fun r='_ZN10tensorflow15GraphDefBuilderC1ENS0_23TestFailImmediatelyTypeEPKNS_19OpRegistryInterfaceE'/>
<fun r='_ZNK10tensorflow15GraphDefBuilder4optsEv'/>
<fun r='_ZNK10tensorflow15GraphDefBuilder10ToGraphDefEPNS_8GraphDefE'/>
<fun r='_ZN10tensorflow15GraphDefBuilder18AddFunctionLibraryERKNS_18FunctionDefLibraryE'/>
<fun r='_ZN10tensorflow15GraphDefBuilder11HasFunctionERKSs'/>
<mbr r='tensorflow::GraphDefBuilder::graph_' o='0' t='tensorflow::Graph'/>
<mbr r='tensorflow::GraphDefBuilder::status_' o='5632' t='tensorflow::Status'/>
<mbr r='tensorflow::GraphDefBuilder::opts_' o='5696' t='tensorflow::GraphDefBuilder::Options'/>
