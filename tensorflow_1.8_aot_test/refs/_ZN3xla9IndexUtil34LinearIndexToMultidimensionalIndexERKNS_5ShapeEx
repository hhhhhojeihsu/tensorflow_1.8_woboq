<dec f='tensorflow/tensorflow/compiler/xla/index_util.h' l='43' type='static std::vector&lt;int64&gt; xla::IndexUtil::LinearIndexToMultidimensionalIndex(const xla::Shape &amp; shape, int64 linear_index)'/>
<doc f='tensorflow/tensorflow/compiler/xla/index_util.h' l='40'>// Converts a linear index into multidimensional index (eg {x, y, z}) based on
  // the shape and its layout. The first index in the returned multidimensional
  // index is dimension 0.</doc>
<def f='tensorflow/tensorflow/compiler/xla/index_util.cc' l='95' ll='119' type='static std::vector&lt;int64&gt; xla::IndexUtil::LinearIndexToMultidimensionalIndex(const xla::Shape &amp; shape, int64 linear_index)'/>
<doc f='tensorflow/tensorflow/compiler/xla/index_util.cc' l='95'>/* static */</doc>
<use f='tensorflow/tensorflow/compiler/xla/literal_util.cc' l='1380' u='c' c='_ZNK3xla7Literal16EachCellAsStringERKSt8functionIFvN10tensorflow3gtl10ArraySliceIxEERKSsEE'/>
<use f='tensorflow/tensorflow/compiler/xla/shape_util.cc' l='1265' u='c' c='_ZN3xla9ShapeUtil16ReshapeIsBitcastERKNS_5ShapeES3_'/>
