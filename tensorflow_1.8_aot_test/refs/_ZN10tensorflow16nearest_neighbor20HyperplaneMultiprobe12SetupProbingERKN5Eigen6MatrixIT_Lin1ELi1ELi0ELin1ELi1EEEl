<def f='tensorflow/tensorflow/contrib/nearest_neighbor/kernels/hyperplane_lsh_probes.h' l='69' ll='121' type='void tensorflow::nearest_neighbor::HyperplaneMultiprobe::SetupProbing(const Vector &amp; hash_vector, int_fast64_t num_probes)'/>
<doc f='tensorflow/tensorflow/contrib/nearest_neighbor/kernels/hyperplane_lsh_probes.h' l='53'>// The first input hash_vector is the matrix-vector product between the
  // hyperplane matrix and the vector for which we want to generate a probing
  // sequence. We assume that each index in hash_vector is proportional to the
  // distance between vector and hyperplane (i.e., the hyperplane vectors should
  // all have the same norm).
  //
  // The second input is the number of probes we want to retrieve. If this
  // number is fixed in advance, it should be passed in here in order to enable
  // some (minor) internal optimizations. If the number of probes it not known
  // in advance, the multiprobe sequence can still produce an arbitrary length
  // probing sequence (up to the maximum number of probes) by calling
  // get_next_probe multiple times.
  //
  // If num_probes is at most num_tables, it is not necessary to generate an
  // actual multiprobe sequence and the multiprobe object will simply return
  // the &quot;standard&quot; LSH probes without incurring any multiprobe overhead.</doc>
