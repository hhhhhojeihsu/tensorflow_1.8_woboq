<def f='include/c++/5/utility' l='95' ll='97'/>
<def f='include/c++/5/utility' l='100' ll='102'/>
<def f='include/c++/5/array' l='327' ll='332'/>
<def f='include/c++/5/tuple' l='754' ll='756'/>
<def f='include/c++/5/tuple' l='761' ll='765'/>
<def f='include/c++/5/tuple' l='771' ll='775'/>
<def f='include/c++/5/tuple' l='777' ll='781'/>
<def f='include/c++/5/tuple' l='783' ll='787'/>
<doc f='include/c++/5/utility' l='94'>/// Partial specialization for std::pair</doc>
<doc f='include/c++/5/utility' l='99'>/// Partial specialization for std::pair</doc>
<doc f='include/c++/5/tuple' l='750'>/**
   * Recursive case for tuple_element: strip off the first element in
   * the tuple and retrieve the (i-1)th element of the remaining tuple.
   */</doc>
<doc f='include/c++/5/tuple' l='758'>/**
   * Basis case for tuple_element: The first element is the one we&apos;re seeking.
   */</doc>
<doc f='include/c++/5/array' l='326'>/// Partial specialization for std::array</doc>
