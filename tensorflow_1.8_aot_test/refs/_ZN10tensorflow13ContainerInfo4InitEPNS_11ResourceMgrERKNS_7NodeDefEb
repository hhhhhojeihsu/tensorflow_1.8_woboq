<dec f='tensorflow/tensorflow/core/framework/resource_mgr.h' l='269' type='tensorflow::Status tensorflow::ContainerInfo::Init(tensorflow::ResourceMgr * rmgr, const tensorflow::NodeDef &amp; ndef, bool use_node_name_as_default)'/>
<use f='tensorflow/tensorflow/core/framework/resource_mgr.h' l='272' u='c' c='_ZN10tensorflow13ContainerInfo4InitEPNS_11ResourceMgrERKNS_7NodeDefE'/>
<doc f='tensorflow/tensorflow/core/framework/resource_mgr.h' l='254'>// Analyze the node attribute of &apos;ndef&apos; and decides the container and
  // resource name the kernel should use for accessing the shared
  // resource.
  //
  // &apos;ndef&apos; is expected to have node attribute &quot;container&quot; and
  // &quot;shared_name&quot;. Returns non-OK if they are not provided or they are
  // invalid.
  //
  // The policy is as following:
  // * If the attribute &quot;container&quot; is non-empty, it is used as is.
  //   Otherwise, uses the resource manager&apos;s default container.
  // * If the attribute &quot;shared_name&quot; is non-empty, it is used as is.
  //   Otherwise, if &quot;use_node_name_as_default&quot; is true, the kernel&apos;s
  //   node name is used as the resource name. Otherwise, a string
  //   unique to this process is used.</doc>
<def f='tensorflow/tensorflow/core/framework/resource_mgr.cc' l='239' ll='270' type='tensorflow::Status tensorflow::ContainerInfo::Init(tensorflow::ResourceMgr * rmgr, const tensorflow::NodeDef &amp; ndef, bool use_node_name_as_default)'/>
<use f='tensorflow/tensorflow/core/kernels/map_stage_op.cc' l='502' u='c' c='_ZN10tensorflow12_GLOBAL__N_113GetStagingMapEPNS_15OpKernelContextERKNS_7NodeDefEPPNS0_10StagingMapIXT_EEE'/>
<use f='tensorflow/tensorflow/core/kernels/sparse_tensors_map_ops.cc' l='137' u='c' c='_ZN10tensorflow23SparseTensorAccessingOp6GetMapEPNS_15OpKernelContextEbPPNS_16SparseTensorsMapE'/>
<use f='tensorflow/tensorflow/core/kernels/stage_op.cc' l='200' u='c' c='_ZN10tensorflow12_GLOBAL__N_19GetBufferEPNS_15OpKernelContextERKNS_7NodeDefEPPNS0_6BufferE'/>
<use f='tensorflow/tensorflow/core/kernels/variable_ops.cc' l='58' u='c' c='_ZN10tensorflow10VariableOp7ComputeEPNS_15OpKernelContextE'/>
