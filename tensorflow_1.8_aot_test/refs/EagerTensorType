<def f='tensorflow/tensorflow/python/eager/pywrap_tensor.cc' l='544' type='PyTypeObject *'/>
<use f='tensorflow/tensorflow/python/eager/pywrap_tensor.cc' l='608' u='r' c='_Z22EagerTensor_CheckExactPK7_object'/>
<use f='tensorflow/tensorflow/python/eager/pywrap_tensor.cc' l='620' u='r' c='_Z21EagerTensorFromHandleP16TFE_TensorHandle'/>
<use f='tensorflow/tensorflow/python/eager/pywrap_tensor.cc' l='620' u='r' c='_Z21EagerTensorFromHandleP16TFE_TensorHandle'/>
<use f='tensorflow/tensorflow/python/eager/pywrap_tensor.cc' l='677' u='w' c='_Z22TFE_Py_InitEagerTensorP7_object'/>
<use f='tensorflow/tensorflow/python/eager/pywrap_tensor.cc' l='682' u='r' c='_Z22TFE_Py_InitEagerTensorP7_object'/>
<use f='tensorflow/tensorflow/python/eager/pywrap_tensor.cc' l='700' u='r' c='_Z22TFE_Py_InitEagerTensorP7_object'/>
<use f='tensorflow/tensorflow/python/eager/pywrap_tensor.cc' l='701' u='r' c='_Z22TFE_Py_InitEagerTensorP7_object'/>
<doc f='tensorflow/tensorflow/python/eager/pywrap_tensor.cc' l='528'>// Note that here we are trying to dynamically create a new class as a subclass
// of a &quot;HEAPTYPE&quot; class that is itself created in python code and passed in at
// runtime. This is fairly atypical and undocumented.
//
// We use the following strategy for this. Unfortunately, we have to use
// different approaches for python2.x vs python3.x
// For python2.x, we create the class as a static type and set its tp_base to
// the passed in type. Unfortunately setting tp_flags to include
// Py_TPFLAGS_HEAPTYPE does not work by itself since it needs some more
// initialization of the underlying PyHeapTypeObject and not doing that leads to
// some random crashes especially during garbage collection.
// python3.x explicitly disables a static subclass of a HEAPTYPE base class.
// However it provides a new function, PyType_FromSpecWithBases, to create
// types dynamically.

// Type object for EagerTensor. This is set by TFE_Py_InitEagerTensor.</doc>
