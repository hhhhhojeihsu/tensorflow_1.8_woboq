<dec f='tensorflow/tensorflow/python/util/util.h' l='85' type='PyObject * tensorflow::swig::AssertSameStructure(PyObject * o1, PyObject * o2, bool check_types)'/>
<def f='tensorflow/tensorflow/python/util/util.cc' l='465' ll='480' type='PyObject * tensorflow::swig::AssertSameStructure(PyObject * o1, PyObject * o2, bool check_types)'/>
<doc f='tensorflow/tensorflow/python/util/util.h' l='56'>// Asserts that two structures are nested in the same way.
//
// Note that namedtuples with identical name and fields are always considered
// to have the same shallow structure (even with `check_types=True`).
// For intance, this code will print `True`:
//
// ```python
// def nt(a, b):
//   return collections.namedtuple(&apos;foo&apos;, &apos;a b&apos;)(a, b)
// print(assert_same_structure(nt(0, 1), nt(2, 3)))
// ```
//
// Args:
//  nest1: an arbitrarily nested structure.
//  nest2: an arbitrarily nested structure.
//  check_types: if `true`, types of sequences are checked as
//      well, including the keys of dictionaries. If set to `false`, for example
//      a list and a tuple of objects will look the same if they have the same
//      size. Note that namedtuples with identical name and fields are always
//      considered to have the same shallow structure.
//
// Raises:
//  ValueError: If the two structures do not have the same number of elements or
//    if the two structures are not nested in the same way.
//  TypeError: If the two structures differ in the type of sequence in any of
//    their substructures. Only possible if `check_types` is `True`.
//
// Returns:
//  Py_None on success, nullptr on error.</doc>
