<dec f='tensorflow/tensorflow/core/grappler/costs/robust_stats.h' l='32' type='void tensorflow::grappler::RobustStats::HuberMAD(const std::vector&lt;double&gt; &amp; values)'/>
<use f='tensorflow/tensorflow/core/grappler/costs/robust_stats.cc' l='85' u='c' c='_ZN10tensorflow8grappler11RobustStatsC1EOSt6vectorIdSaIdEE'/>
<def f='tensorflow/tensorflow/core/grappler/costs/robust_stats.cc' l='126' ll='149' type='void tensorflow::grappler::RobustStats::HuberMAD(const std::vector&lt;double&gt; &amp; sorted_values)'/>
<doc f='tensorflow/tensorflow/core/grappler/costs/robust_stats.cc' l='118'>// Given a list of values, this approximates the stddev using the MAD and then
// uses it to compute a Huber robust mean (sandwich mean).  A margin of
// c*stddev is defined around the current mean, and values are weighted by
// margin / abs(value - mean) if outside the margin, or 1 if inside.  This
// computes the mean iteratively, because each time it changes the margin
// shifts a bit.  It typically settles very quickly, but it&apos;s possible for it
// to be unstable.  We limit it to 10 iterations.
//</doc>
