<def f='tensorflow/tensorflow/core/kernels/deep_conv2d.h' l='108' ll='111'/>
<fun r='_ZN10tensorflow7functor10DeepConv2DclEPNS_15OpKernelContextERKNS_10Conv2DArgsEPKT0_S9_PS7_'/>
<def f='tensorflow/tensorflow/core/kernels/deep_conv2d.cc' l='935' ll='1151'/>
<def f='tensorflow/tensorflow/core/kernels/deep_conv2d.cc' l='1155'/>
<size>1</size>
<doc f='tensorflow/tensorflow/core/kernels/deep_conv2d.cc' l='921'>// Conv2D operation specialized for deep convolutions (i.e. large
// in_depth * out_depth).
// Details:
// *) Transforms and packs filters from &apos;filter&apos; in parallel.
// *) Computes Conv2D parallelized across &apos;batch&apos; dimension.
//   *) Each thread loops over images in its batch shard, copying &apos;num_tiles&apos;
//      input tiles into a local buffer, and computing the Conv2D output of
//      these tiles by all filters.

// TODO(andydavis) Improve the performance of boundary cases where the input
// tile extends past the limit, and wasted outputs are computed. This overhead
// is at most 2/n, where &apos;n&apos; is the max(out_rows, out_cols), and so is worse
// for smaller spatial sizes.
// TODO(andydavis) Improve the performance of sharded filters.</doc>
