<dec f='tensorflow/tensorflow/compiler/xla/service/shape_inference.h' l='58' type='static StatusOr&lt;xla::Shape&gt; xla::ShapeInference::InferBinaryOpShape(xla::BinaryOperation operation, const xla::Shape &amp; lhs, const xla::Shape &amp; rhs, tensorflow::gtl::ArraySlice&lt;int64&gt; broadcast_dimensions)'/>
<doc f='tensorflow/tensorflow/compiler/xla/service/shape_inference.h' l='56'>// Infers the shape produced by applying the given binary operation to the
  // given input shapes.</doc>
<use f='tensorflow/tensorflow/compiler/xla/service/shape_inference.cc' l='948' u='c' c='_ZN3xla14ShapeInference18InferBinaryOpShapeENS_9HloOpcodeEPKNS_14HloInstructionES4_'/>
<use f='tensorflow/tensorflow/compiler/xla/service/shape_inference.cc' l='955' u='c' c='_ZN3xla14ShapeInference18InferBinaryOpShapeENS_9HloOpcodeERKNS_5ShapeES4_N10tensorflow3gtl10ArraySliceIxEE'/>
<def f='tensorflow/tensorflow/compiler/xla/service/shape_inference.cc' l='959' ll='1036' type='static StatusOr&lt;xla::Shape&gt; xla::ShapeInference::InferBinaryOpShape(xla::BinaryOperation operation, const xla::Shape &amp; lhs, const xla::Shape &amp; rhs, tensorflow::gtl::ArraySlice&lt;int64&gt; broadcast_dimensions)'/>
<doc f='tensorflow/tensorflow/compiler/xla/service/shape_inference.cc' l='959'>/* static */</doc>
<use f='tensorflow/tensorflow/compiler/xla/service/user_computation.cc' l='1393' u='c' c='_ZN3xla15UserComputation20AddBinaryInstructionERKNS_15BinaryOpRequestE'/>
