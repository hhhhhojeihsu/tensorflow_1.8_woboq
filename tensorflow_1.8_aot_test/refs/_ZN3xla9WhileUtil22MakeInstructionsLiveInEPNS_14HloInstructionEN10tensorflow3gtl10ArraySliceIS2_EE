<dec f='tensorflow/tensorflow/compiler/xla/service/while_util.h' l='52' type='static StatusOr&lt;xla::WhileUtil::MakeInstructionsLiveInResult&gt; xla::WhileUtil::MakeInstructionsLiveIn(xla::HloInstruction * while_instr, tensorflow::gtl::ArraySlice&lt;HloInstruction *&gt; instructions)'/>
<doc f='tensorflow/tensorflow/compiler/xla/service/while_util.h' l='40'>// Replaces `while_instr` with a new while instruction that is equivalent to
  // `while_instr`, except that it has all of the HLO instructions in
  // `instructions` as live-in, loop invariant values.  These new live in values
  // are represented as new elements appended to the parameter of the while
  // loop, which must be of tuple shape.  GetTupleElement instructions computing
  // each new live in value is returned in the `while_body_live_in_values`
  // vector.
  //
  // Precondition: `while_instr` must have a tuple shaped state.
  //
  // Every instruction in `instructions` must be contained in the computation
  // that contains `while_instr`.</doc>
<use f='tensorflow/tensorflow/compiler/xla/service/while_loop_invariant_code_motion.cc' l='238' u='c' c='_ZN3xlaL45TryHoistingInvariantInstructionsFromWhileBodyEPNS_14HloInstructionE'/>
<def f='tensorflow/tensorflow/compiler/xla/service/while_util.cc' l='92' ll='141' type='static StatusOr&lt;WhileUtil::MakeInstructionsLiveInResult&gt; xla::WhileUtil::MakeInstructionsLiveIn(xla::HloInstruction * while_instr, tensorflow::gtl::ArraySlice&lt;HloInstruction *&gt; instructions)'/>
<doc f='tensorflow/tensorflow/compiler/xla/service/while_util.cc' l='92'>/*static*/</doc>
