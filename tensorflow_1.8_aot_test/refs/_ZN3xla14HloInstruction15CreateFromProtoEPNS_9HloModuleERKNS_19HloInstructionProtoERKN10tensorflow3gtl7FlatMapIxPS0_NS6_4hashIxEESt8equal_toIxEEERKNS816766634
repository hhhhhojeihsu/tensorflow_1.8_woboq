<dec f='tensorflow/tensorflow/compiler/xla/service/hlo_instruction.h' l='187' type='static StatusOr&lt;std::unique_ptr&lt;HloInstruction&gt; &gt; xla::HloInstruction::CreateFromProto(xla::HloModule * module, const xla::HloInstructionProto &amp; proto, const tensorflow::gtl::FlatMap&lt;int64, HloInstruction *&gt; &amp; instruction_map, const tensorflow::gtl::FlatMap&lt;int64, HloComputation *&gt; &amp; computation_map)'/>
<doc f='tensorflow/tensorflow/compiler/xla/service/hlo_instruction.h' l='177'>// Creates an instruction from the given proto. Arguments:
  //
  //   module: the module which will contain the instruction. The newly created
  //     instruction is *not* added to the module or any computation, however.
  //   proto: the proto to convert from.
  //   instruction_map: a map from instruction id to HloInstruction*. This map
  //     must contain all operands of the newly constructed instruction.
  //   computation_map: a map from computation id to HloComputation*. This map
  //     must contain all computations which the newly constructed instruction
  //     calls.</doc>
<use f='tensorflow/tensorflow/compiler/xla/service/hlo_computation.cc' l='413' u='c' c='_ZN3xla14HloComputation15CreateFromProtoEPNS_9HloModuleERKNS_19HloComputationProtoERKN10tensorflow3gtl7FlatMapIxPS0_NS6_4hashIxEESt8equal_toIxEEE'/>
<def f='tensorflow/tensorflow/compiler/xla/service/hlo_instruction.cc' l='53' ll='163' type='static StatusOr&lt;std::unique_ptr&lt;HloInstruction&gt; &gt; xla::HloInstruction::CreateFromProto(xla::HloModule * module, const xla::HloInstructionProto &amp; proto, const tensorflow::gtl::FlatMap&lt;int64, HloInstruction *&gt; &amp; instruction_map, const tensorflow::gtl::FlatMap&lt;int64, HloComputation *&gt; &amp; computation_map)'/>
<doc f='tensorflow/tensorflow/compiler/xla/service/hlo_instruction.cc' l='52'>/* static */</doc>
