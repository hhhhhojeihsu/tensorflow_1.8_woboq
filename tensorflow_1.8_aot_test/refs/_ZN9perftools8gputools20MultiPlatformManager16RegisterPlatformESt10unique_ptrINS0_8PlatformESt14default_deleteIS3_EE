<dec f='tensorflow/tensorflow/stream_executor/multi_platform_manager.h' l='88' type='static port::Status perftools::gputools::MultiPlatformManager::RegisterPlatform(std::unique_ptr&lt;Platform&gt; platform)'/>
<doc f='tensorflow/tensorflow/stream_executor/multi_platform_manager.h' l='84'>// Registers a platform object, returns an error status if the platform is
  // already registered. The associated listener, if not null, will be used to
  // trace events for ALL executors for that platform.
  // Takes ownership of listener.</doc>
<use f='tensorflow/tensorflow/stream_executor/host/host_platform.cc' l='97' u='c' c='_ZN9perftools8gputools4hostL22InitializeHostPlatformEv'/>
<def f='tensorflow/tensorflow/stream_executor/multi_platform_manager.cc' l='52' ll='70' type='static port::Status perftools::gputools::MultiPlatformManager::RegisterPlatform(std::unique_ptr&lt;Platform&gt; platform)'/>
<doc f='tensorflow/tensorflow/stream_executor/multi_platform_manager.cc' l='52'>/* static */</doc>
