<inh f='tensorflow/tensorflow/compiler/xla/service/hlo_pass_interface.h' l='29' c='xla::HloPassInterface'/>
<def f='tensorflow/tensorflow/compiler/xla/service/hlo_element_type_converter.h' l='28' ll='45'/>
<size>16</size>
<doc f='tensorflow/tensorflow/compiler/xla/service/hlo_element_type_converter.h' l='24'>// A pass that eliminates certain element types as the input or output of ops by
// inserting Convert ops. This allows a backend to support an element type while
// only actually implementing the Convert op for that element type. This is
// generally not the fastest approach, but it works.</doc>
<fun r='_ZN3xla23HloElementTypeConverterC1ENS_13PrimitiveTypeES1_'/>
<fun r='_ZNK3xla23HloElementTypeConverter4nameEv'/>
<fun r='_ZN3xla23HloElementTypeConverter3RunEPNS_9HloModuleE'/>
<mbr r='xla::HloElementTypeConverter::eliminate_type_' o='64' t='xla::PrimitiveType'/>
<mbr r='xla::HloElementTypeConverter::replace_with_type_' o='96' t='xla::PrimitiveType'/>
