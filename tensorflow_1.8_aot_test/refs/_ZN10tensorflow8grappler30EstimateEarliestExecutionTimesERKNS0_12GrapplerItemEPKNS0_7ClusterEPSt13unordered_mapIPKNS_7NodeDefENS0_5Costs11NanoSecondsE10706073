<dec f='tensorflow/tensorflow/core/grappler/optimizers/static_schedule.h' l='34' type='tensorflow::Status tensorflow::grappler::EstimateEarliestExecutionTimes(const tensorflow::grappler::GrapplerItem &amp; item, const tensorflow::grappler::Cluster * cluster, std::unordered_map&lt;const NodeDef *, Costs::NanoSeconds&gt; * execution_times)'/>
<use f='tensorflow/tensorflow/core/grappler/optimizers/memory_optimizer.cc' l='1153' u='c' c='_ZN10tensorflow8grappler12SwappingPassENS_25RewriterConfig_MemOptTypeEPNS0_7ClusterEPNS0_12GrapplerItemEPSt13unordered_setISsSt4hashISsESt8equal_toISsESaISsEE'/>
<doc f='tensorflow/tensorflow/core/grappler/optimizers/static_schedule.h' l='29'>// Compute the earliest time at which the execution of each node in the graph
// can complete.
// In our estimation, we ensure that each node takes at least one nanosecond to
// execute: therefore the execution times can be used to derive a topological
// ordering of the graph (at least as long as there is no loop in the graph).</doc>
<def f='tensorflow/tensorflow/core/grappler/optimizers/static_schedule.cc' l='59' ll='126' type='tensorflow::Status tensorflow::grappler::EstimateEarliestExecutionTimes(const tensorflow::grappler::GrapplerItem &amp; item, const tensorflow::grappler::Cluster * cluster, std::unordered_map&lt;const NodeDef *, Costs::NanoSeconds&gt; * completion_times)'/>
