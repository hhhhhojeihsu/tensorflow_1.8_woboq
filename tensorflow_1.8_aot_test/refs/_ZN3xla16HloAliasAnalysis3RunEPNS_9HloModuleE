<dec f='tensorflow/tensorflow/compiler/xla/service/hlo_alias_analysis.h' l='42' type='static StatusOr&lt;std::unique_ptr&lt;HloAliasAnalysis&gt; &gt; xla::HloAliasAnalysis::Run(xla::HloModule * module)'/>
<use f='tensorflow/tensorflow/compiler/xla/service/copy_insertion.cc' l='369' u='c' c='_ZN3xla12_GLOBAL__N_130AddCopiesToResolveInterferenceEPNS_9HloModuleE'/>
<use f='tensorflow/tensorflow/compiler/xla/service/copy_insertion.cc' l='958' u='c' c='_ZN3xla12_GLOBAL__N_123RemoveUnnecessaryCopiesERKNS_11HloOrderingERKN10tensorflow3gtl7FlatSetIiNS4_4hashIiEESt8equal_toIiEEEPNS_9HloModuleE'/>
<use f='tensorflow/tensorflow/compiler/xla/service/copy_insertion.cc' l='985' u='c' c='_ZN3xla12_GLOBAL__N_120AddSpecialCaseCopiesERKNS_9CallGraphEPNS_9HloModuleE'/>
<use f='tensorflow/tensorflow/compiler/xla/service/copy_insertion.cc' l='1085' u='c' c='_ZN3xla12_GLOBAL__N_129VerifyNoLiveRangeInterferenceEPNS_9HloModuleE'/>
<doc f='tensorflow/tensorflow/compiler/xla/service/hlo_alias_analysis.h' l='40'>// The callgraph of the given HloModule must be flattened
  // (xla::FlattenCallGraph) prior to running the analysis.</doc>
<def f='tensorflow/tensorflow/compiler/xla/service/hlo_alias_analysis.cc' l='454' ll='491' type='static StatusOr&lt;std::unique_ptr&lt;HloAliasAnalysis&gt; &gt; xla::HloAliasAnalysis::Run(xla::HloModule * module)'/>
<doc f='tensorflow/tensorflow/compiler/xla/service/hlo_alias_analysis.cc' l='453'>/* static */</doc>
