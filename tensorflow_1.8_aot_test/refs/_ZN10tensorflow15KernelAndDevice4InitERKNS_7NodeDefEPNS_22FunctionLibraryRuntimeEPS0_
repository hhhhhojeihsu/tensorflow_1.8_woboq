<dec f='tensorflow/tensorflow/core/common_runtime/eager/kernel_and_device.h' l='54' type='static tensorflow::Status tensorflow::KernelAndDevice::Init(const tensorflow::NodeDef &amp; ndef, tensorflow::FunctionLibraryRuntime * flib, tensorflow::KernelAndDevice * out)'/>
<use f='tensorflow/tensorflow/c/eager/c_api.cc' l='866' u='c' c='TFE_Execute'/>
<doc f='tensorflow/tensorflow/core/common_runtime/eager/kernel_and_device.h' l='43'>// Populates &apos;out&apos; with a kernel appropriate for &apos;ndef&apos;.
  //
  // The provided FunctionLibraryRuntime MUST outlive all calls to
  // Run() on the returned KernelAndDevice.
  //
  // TODO(ashankar): Figure out thread-safety concerns around
  // FunctionLibraryRuntime (in particular, how the underlying
  // FunctionLibraryDefinition might be mutated by another thread as new
  // functions are registered with it).  Conservatively, thread-safe usage of
  // the FunctionLibraryRuntime is pushed on to the caller (see locking in
  // c_api.cc).</doc>
<def f='tensorflow/tensorflow/core/common_runtime/eager/kernel_and_device.cc' l='46' ll='54' type='static tensorflow::Status tensorflow::KernelAndDevice::Init(const tensorflow::NodeDef &amp; ndef, tensorflow::FunctionLibraryRuntime * flib, tensorflow::KernelAndDevice * out)'/>
<doc f='tensorflow/tensorflow/core/common_runtime/eager/kernel_and_device.cc' l='45'>// static</doc>
