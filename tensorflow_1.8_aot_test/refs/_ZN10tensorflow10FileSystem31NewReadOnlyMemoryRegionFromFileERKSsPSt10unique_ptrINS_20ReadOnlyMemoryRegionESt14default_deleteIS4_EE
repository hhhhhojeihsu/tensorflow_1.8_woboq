<dec f='tensorflow/tensorflow/core/platform/file_system.h' l='101' type='tensorflow::Status tensorflow::FileSystem::NewReadOnlyMemoryRegionFromFile(const string &amp; fname, std::unique_ptr&lt;ReadOnlyMemoryRegion&gt; * result)'/>
<doc f='tensorflow/tensorflow/core/platform/file_system.h' l='91'>/// \brief Creates a readonly region of memory with the file context.
  ///
  /// On success, it returns a pointer to read-only memory region
  /// from the content of file fname. The ownership of the region is passed to
  /// the caller. On failure stores nullptr in *result and returns non-OK.
  ///
  /// The returned memory region can be accessed from many threads in parallel.
  ///
  /// The ownership of the returned ReadOnlyMemoryRegion is passed to the caller
  /// and the object should be deleted when is not used.</doc>
<use f='tensorflow/tensorflow/core/platform/env.cc' l='140' u='c' c='_ZN10tensorflow3Env31NewReadOnlyMemoryRegionFromFileERKSsPSt10unique_ptrINS_20ReadOnlyMemoryRegionESt14default_deleteIS4_EE'/>
<ovr f='tensorflow/tensorflow/core/platform/posix/posix_file_system.cc' l='181' c='_ZN10tensorflow15PosixFileSystem31NewReadOnlyMemoryRegionFromFileERKSsPSt10unique_ptrINS_20ReadOnlyMemoryRegionESt14default_deleteIS4_EE'/>
<ovr f='tensorflow/tensorflow/core/util/memmapped_file_system.cc' l='110' c='_ZN10tensorflow19MemmappedFileSystem31NewReadOnlyMemoryRegionFromFileERKSsPSt10unique_ptrINS_20ReadOnlyMemoryRegionESt14default_deleteIS4_EE'/>
