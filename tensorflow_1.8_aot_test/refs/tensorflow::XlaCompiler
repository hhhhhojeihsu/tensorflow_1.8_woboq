<def f='tensorflow/tensorflow/compiler/tf2xla/xla_compiler.h' l='85' ll='395'/>
<size>864</size>
<doc f='tensorflow/tensorflow/compiler/tf2xla/xla_compiler.h' l='36'>// The XlaCompiler class is responsible for compilation of a self-contained
// subgraph of a TensorFlow computation using the XLA linear algebra runtime.
// It does a symbolic execution of the graph starting from specific input
// shapes, using a JIT device to convert operators into XLA computations.
//
// XlaCompiler is typically invoked from an `_XlaLaunch` operator once the
// shapes of all input parameters to the computation are known. This is
// because the symbolic execution requires known shapes for all operations.
//
// XlaCompiler compiles Tensorflow graphs that received inputs via _Arg nodes,
// and return outputs via _Retval nodes.
//
// The XlaCompiler requires one Argument struct for each _Arg index, that
// describes each argument. Arguments can be compile-time constants
// (kind kConstant), run-time parameters (kind kParameter), or resources
// (kind kResource).
//
// Only kParameter and initialized kResource arguments become runtime parameters
// to the generated XLA computation. The XLA computation will have run-time
// parameters in the following order:
//   +---------------------+-----------------------------------------+
//   |  kParameter values  |  Initial values of kResource arguments  |
//   +---------------------+-----------------------------------------+
// Within each block, the arguments are arranged by the _Arg index from which
// they were derived.
//
// The run-time outputs of the XLA computation are arranged in the following
// order:
//   +------------------+-----------------------------------------+
//   |  _Retval values  |  Updated values of kResource arguments  |
//   +------------------+-----------------------------------------+
// _Retval values are ordered by _Retval index, whereas kResource values are
// ordered by the original _Arg position of the variable.
//
// In both inputs and outputs, kResource values are placed the end. When
// emitting While loop bodies, we must ensure that the loop body has
// identical input and output signatures. By moving variable values
// to the end of the argument list and using the
// `return_updated_values_for_all_variables` option, we can ensure that the
// input and output values of resources appear at the same positions.
//
// Resources are passed as parameters or returned as resource updates in
// &quot;packed&quot; form.
// kStack resources are packed as (array, size of stack) XLA tuples.
// kTensorArray resources without gradients are packed as the array that
// backs the TensorArray. If gradients are present (`tensor_array_gradients`),
// the packed representation is a (array, gradient0, gradient1, ...) tuple,
// where gradient_k is the value of the k-th gradient in the
// `tensor_array_gradients` ordered set.</doc>
<fun r='_ZN10tensorflow11XlaCompilerC1ENS0_7OptionsE'/>
<fun r='_ZN10tensorflow11XlaCompilerD1Ev'/>
<fun r='_ZN10tensorflow11XlaCompiler15CompileFunctionERKNS0_14CompileOptionsERKNS_12NameAttrListESt6vectorINS0_8ArgumentESaIS8_EEPNS0_17CompilationResultE'/>
<fun r='_ZN10tensorflow11XlaCompiler12CompileGraphERKNS0_14CompileOptionsERKSsSt10unique_ptrINS_5GraphESt14default_deleteIS7_EERKSt6vectorINS0_8ArgumentESaISC11181090'/>
<fun r='_ZN10tensorflow11XlaCompiler15CompileSingleOpERKNS0_14CompileOptionsERKSsPNS_15OpKernelContextERKSt6vectorINS0_8ArgumentESaIS9_EEPNS0_17CompilationResultE'/>
<fun r='_ZN10tensorflow11XlaCompiler19XLAShapeForArgumentERKNS0_8ArgumentEPN3xla5ShapeE'/>
<fun r='_ZN10tensorflow11XlaCompiler16GetChannelHandleERKSsPN3xla13ChannelHandleE'/>
<fun r='_ZN10tensorflow11XlaCompiler23SetDeviceToHostMetadataERKSsNS_3gtl10ArraySliceINS_8DataTypeEEENS4_INS_11TensorShapeEEE'/>
<fun r='_ZNK10tensorflow11XlaCompiler21GetDeviceToHostShapesERKSsPSt6vectorINS_11TensorShapeESaIS4_EE'/>
<fun r='_ZN10tensorflow11XlaCompiler23SetHostToDeviceMetadataERKSsNS_3gtl10ArraySliceINS_8DataTypeEEENS4_INS_11TensorShapeEEE'/>
<fun r='_ZNK10tensorflow11XlaCompiler7optionsEv'/>
<fun r='_ZNK10tensorflow11XlaCompiler6clientEv'/>
<fun r='_ZNK10tensorflow11XlaCompiler12flib_runtimeEv'/>
<fun r='_ZN10tensorflow11XlaCompiler16FindFunctionBodyERKNS_12NameAttrListEPPKNS_12FunctionBodyE'/>
<fun r='_ZN10tensorflow11XlaCompiler8GetGraphEPKNS_12FunctionBodyE'/>
<fun r='_ZN10tensorflow11XlaCompiler14BuildArgumentsERKNS_5GraphERKSt6vectorINS0_8ArgumentESaIS5_EEbPN3xla18ComputationBuilderEPNS_10XlaContextEPS4_IiSaIiEEPS5407289'/>
<mbr r='tensorflow::XlaCompiler::options_' o='0' t='tensorflow::XlaCompiler::Options'/>
<mbr r='tensorflow::XlaCompiler::initialization_status_' o='640' t='tensorflow::Status'/>
<fun r='_ZN10tensorflow11XlaCompiler10NextStepIdEv'/>
<mbr r='tensorflow::XlaCompiler::next_step_id_' o='704' t='int64'/>
<mbr r='tensorflow::XlaCompiler::device_' o='768' t='tensorflow::XlaCompilationDevice *'/>
<mbr r='tensorflow::XlaCompiler::device_mgr_' o='832' t='tensorflow::DeviceMgr'/>
<mbr r='tensorflow::XlaCompiler::local_flib_def_' o='4800' t='std::unique_ptr&lt;FunctionLibraryDefinition&gt;'/>
<mbr r='tensorflow::XlaCompiler::pflr_' o='4864' t='std::unique_ptr&lt;ProcessFunctionLibraryRuntime&gt;'/>
<mbr r='tensorflow::XlaCompiler::local_pflr_' o='4928' t='std::unique_ptr&lt;ProcessFunctionLibraryRuntime&gt;'/>
<mbr r='tensorflow::XlaCompiler::local_flib_runtime_' o='4992' t='tensorflow::FunctionLibraryRuntime *'/>
<mbr r='tensorflow::XlaCompiler::flib_runtime_' o='5056' t='tensorflow::FunctionLibraryRuntime *'/>
<mbr r='tensorflow::XlaCompiler::cache_' o='5120' t='std::unordered_map&lt;std::pair&lt;string, std::vector&lt;Argument&gt; &gt;, CompilationResult, SignatureHash&gt;'/>
<mbr r='tensorflow::XlaCompiler::channels_' o='5568' t='std::unordered_map&lt;string, xla::ChannelHandle&gt;'/>
<mbr r='tensorflow::XlaCompiler::host_compute_sends_' o='6016' t='std::unordered_map&lt;string, tf2xla::HostTransferMetadata&gt;'/>
<mbr r='tensorflow::XlaCompiler::host_compute_recvs_' o='6464' t='std::unordered_map&lt;string, tf2xla::HostTransferMetadata&gt;'/>
<fun r='_ZN10tensorflow11XlaCompilerC1ERKS0_'/>
