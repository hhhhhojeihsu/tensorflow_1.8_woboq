<dec f='tensorflow/tensorflow/compiler/xla/service/llvm_ir/llvm_loop.h' l='203' type='std::unique_ptr&lt;ForLoop&gt; xla::llvm_ir::ForLoopNest::AddLoop(int64 start_index, int64 end_index, int64 stride, tensorflow::StringPiece suffix, bool prevent_unrolling = false, bool prevent_vectorization = false)'/>
<doc f='tensorflow/tensorflow/compiler/xla/service/llvm_ir/llvm_loop.h' l='201'>// A convenient wrapper of the other flavor of AddLoop. The given start and
  // end index are constant.</doc>
<use f='tensorflow/tensorflow/compiler/xla/service/cpu/ir_emitter.cc' l='1679' u='c' c='_ZN3xla3cpu9IrEmitter20EmitVectorizedReduceEPNS_14HloInstructionES3_S3_N10tensorflow3gtl10ArraySliceIxEEPNS_14HloComputationEPSs'/>
<def f='tensorflow/tensorflow/compiler/xla/service/llvm_ir/llvm_loop.cc' l='226' ll='236' type='std::unique_ptr&lt;ForLoop&gt; xla::llvm_ir::ForLoopNest::AddLoop(int64 start_index, int64 end_index, int64 stride, tensorflow::StringPiece suffix, bool prevent_unrolling = false, bool prevent_vectorization = false)'/>
