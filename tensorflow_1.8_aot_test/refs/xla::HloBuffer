<def f='tensorflow/tensorflow/compiler/xla/service/hlo_buffer.h' l='73' ll='117'/>
<size>32</size>
<doc f='tensorflow/tensorflow/compiler/xla/service/hlo_buffer.h' l='31'>// A container which can hold one or more HloValues. An HLO buffer abstractly
// represents the allocation which HLO instructions write into and read
// from. Generally there is a one-to-one correspondence between HloBuffers and
// HloValue where each HloValue in the module is held in a unique HloBuffer. An
// exception is the while instruction which updates the loop state in-place. In
// this case, we have a single HloBuffer for each HloPosition in the loop state,
// but multiple HloValues. For example:
//
//   %init = ...
//   %while = While(%init, body, condition)
//
//  body:
//   %body_param = Param(0)
//     ...
//   %body_root = ...
//
//  condition:
//   %cond_param = Param(0)
//     ...
//
// For simplicity, assume that %while is array-shaped. In this case, we have a
// single HloBuffer which holds the following HloValues: HloValue{%init},
// HloValue{%while}, HloValue{%body_param}, HloValue{%body_root}, and
// HloValue{%cond_param}.
//
// HloBuffers may appear at different HloPositions in the module mirroring the
// same propery of HloValues. For example:
//
//   %sub = Sub(...)
//   %add = Add(...)
//   %tuple = Tuple(%add, %sub)
//   %gte = GetTupleElement(%tuple, 0)
//
// In this case, the HloBuffer containing %add appears at the following
// positions: HloPosition{%add, {}}, HloPosition{%tuple, {0}}, and
// HloPosition{%gte, {}}.
//
// Different HloPositions which share the same HloBuffer indicate mandatory
// aliasing in the HLO module. These positions must share the same memory
// allocation for correctness (the backends rely on this property). This differs
// from incidental aliasing introduced by memory reuse in BufferAssignment where
// different instructions may happen to get the same allocation.</doc>
<fun r='_ZN3xla9HloBuffer10IdLessThanEPKS0_S2_'/>
<fun r='_ZN3xla9HloBuffer7IdEqualEPKS0_S2_'/>
<fun r='_ZN3xla9HloBufferC1ExN10tensorflow3gtl10ArraySliceIPKNS_8HloValueEEE'/>
<fun r='_ZNK3xla9HloBuffer2idEv'/>
<fun r='_ZNK3xla9HloBuffer6valuesEv'/>
<fun r='_ZNK3xla9HloBuffer14GetUniqueValueEv'/>
<fun r='_ZNK3xla9HloBuffer16ComputePositionsEv'/>
<fun r='_ZNK3xla9HloBuffer8ToStringEv'/>
<fun r='_ZNK3xla9HloBuffereqERKS0_'/>
<fun r='_ZNK3xla9HloBufferneERKS0_'/>
<mbr r='xla::HloBuffer::id_' o='0' t='const Id'/>
<mbr r='xla::HloBuffer::values_' o='64' t='const std::vector&lt;const HloValue *&gt;'/>
