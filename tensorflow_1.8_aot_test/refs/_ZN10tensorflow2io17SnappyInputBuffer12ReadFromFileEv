<dec f='tensorflow/tensorflow/core/lib/io/snappy/snappy_inputbuffer.h' l='77' type='tensorflow::Status tensorflow::io::SnappyInputBuffer::ReadFromFile()'/>
<use f='tensorflow/tensorflow/core/lib/io/snappy/snappy_inputbuffer.cc' l='83' u='c' c='_ZN10tensorflow2io17SnappyInputBuffer7InflateEv'/>
<use f='tensorflow/tensorflow/core/lib/io/snappy/snappy_inputbuffer.cc' l='127' u='c' c='_ZN10tensorflow2io17SnappyInputBuffer25ReadCompressedBlockLengthEPj'/>
<def f='tensorflow/tensorflow/core/lib/io/snappy/snappy_inputbuffer.cc' l='144' ll='194' type='tensorflow::Status tensorflow::io::SnappyInputBuffer::ReadFromFile()'/>
<doc f='tensorflow/tensorflow/core/lib/io/snappy/snappy_inputbuffer.h' l='64'>// Reads data from `file_` and tries to fill up `input_buffer_` if enough
  // unread data is left in `file_`.
  //
  // Looks up `next_in_` to check how much data in `input_buffer_`
  // has already been read. The used data is removed and new data is added to
  // after any unread data in `input_buffer_`.
  // After this call `next_in` points to the start of `input_buffer_`
  // and `avail_in_` stores the number of readable bytes in
  // `input_buffer_`.
  //
  // Returns OutOfRange error if NO data could be read from file. Note that this
  // won&apos;t return an OutOfRange if there wasn&apos;t sufficient data in file to
  // completely fill up `input_buffer_`.</doc>
