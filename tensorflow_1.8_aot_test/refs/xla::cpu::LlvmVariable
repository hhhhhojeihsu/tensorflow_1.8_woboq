<def f='tensorflow/tensorflow/compiler/xla/service/cpu/vector_support_library.h' l='283' ll='293'/>
<ovr f='tensorflow/tensorflow/compiler/xla/service/cpu/vector_support_library.h' l='295' c='xla::cpu::VectorVariable'/>
<ovr f='tensorflow/tensorflow/compiler/xla/service/cpu/vector_support_library.h' l='305' c='xla::cpu::ScalarVariable'/>
<size>16</size>
<doc f='tensorflow/tensorflow/compiler/xla/service/cpu/vector_support_library.h' l='281'>// This wraps an alloca-backed stack variable which LLVM&apos;s SSA construction pass
// can later convert to a SSA value.</doc>
<fun r='_ZN3xla3cpu12LlvmVariableC1EPN4llvm4TypeEPNS2_9IRBuilderINS2_14ConstantFolderENS2_24IRBuilderDefaultInserterEEE'/>
<fun r='_ZNK3xla3cpu12LlvmVariable3GetEv'/>
<fun r='_ZN3xla3cpu12LlvmVariable3SetEPN4llvm5ValueE'/>
<mbr r='xla::cpu::LlvmVariable::alloca_' o='0' t='llvm::AllocaInst *'/>
<mbr r='xla::cpu::LlvmVariable::ir_builder_' o='64' t='llvm::IRBuilder&lt;&gt; *'/>
