<dec f='tensorflow/tensorflow/compiler/xla/service/shape_inference.h' l='233' type='static StatusOr&lt;xla::Shape&gt; xla::ShapeInference::InferConvertShape(const xla::Shape &amp; operand_shape, xla::PrimitiveType new_element_type)'/>
<use f='tensorflow/tensorflow/compiler/xla/client/xla_client/xla_builder.cc' l='1006' u='c' c='_ZN3xla10XlaBuilder18ConvertElementTypeERKNS_5XlaOpENS_13PrimitiveTypeE'/>
<doc f='tensorflow/tensorflow/compiler/xla/service/shape_inference.h' l='230'>// Helper that validates the given operand shape can be converted to the
  // target output_shape via a convert instruction -- the requirement is that
  // the shape is identical except for the element type.</doc>
<use f='tensorflow/tensorflow/compiler/xla/service/hlo_verifier.cc' l='52' u='c' c='_ZN3xla13ShapeVerifier13HandleConvertEPNS_14HloInstructionE'/>
<def f='tensorflow/tensorflow/compiler/xla/service/shape_inference.cc' l='456' ll='477' type='static StatusOr&lt;xla::Shape&gt; xla::ShapeInference::InferConvertShape(const xla::Shape &amp; operand_shape, xla::PrimitiveType new_element_type)'/>
<doc f='tensorflow/tensorflow/compiler/xla/service/shape_inference.cc' l='456'>/* static */</doc>
<use f='tensorflow/tensorflow/compiler/xla/service/user_computation.cc' l='1048' u='c' c='_ZN3xla15UserComputation21AddConvertInstructionERKNS_14ConvertRequestE'/>
<use f='tensorflow/tensorflow/compiler/xla/service/user_computation.cc' l='1073' u='c' c='_ZN3xla15UserComputation28AddBitcastConvertInstructionERKNS_14ConvertRequestE'/>
