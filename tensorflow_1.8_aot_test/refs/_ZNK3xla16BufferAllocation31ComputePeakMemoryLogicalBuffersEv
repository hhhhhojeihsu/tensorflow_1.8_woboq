<dec f='tensorflow/tensorflow/compiler/xla/service/buffer_assignment.h' l='219' type='std::pair&lt;int64, std::vector&lt;const LogicalBuffer *&gt; &gt; xla::BufferAllocation::ComputePeakMemoryLogicalBuffers() const'/>
<def f='tensorflow/tensorflow/compiler/xla/service/buffer_assignment.cc' l='295' ll='399' type='std::pair&lt;int64, std::vector&lt;const LogicalBuffer *&gt; &gt; xla::BufferAllocation::ComputePeakMemoryLogicalBuffers() const'/>
<doc f='tensorflow/tensorflow/compiler/xla/service/buffer_assignment.h' l='209'>// Compute and return the LogicalBuffers which are live at the point of peak
  // memory usage for the given allocation. The point of peak memory usage is
  // the point at which the total size of all live logical buffers is
  // maximal. If peak memory is reached at multiple points, the set of logical
  // buffers live at the earliest maximal point is returned. The vector is
  // stabily asserted by LogicalBuffer::Index.
  //
  // The return value is a pair of total size of the logical buffers at peak,
  // and the buffers themselves.</doc>
