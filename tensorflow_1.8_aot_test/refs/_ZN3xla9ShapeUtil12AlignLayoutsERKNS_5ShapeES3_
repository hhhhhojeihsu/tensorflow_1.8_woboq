<dec f='tensorflow/tensorflow/compiler/xla/shape_util.h' l='557' type='static tensorflow::gtl::optional&lt;Shape&gt; xla::ShapeUtil::AlignLayouts(const xla::Shape &amp; input_shape, const xla::Shape &amp; output_shape)'/>
<doc f='tensorflow/tensorflow/compiler/xla/shape_util.h' l='551'>// Find a physical layout for &apos;output_shape&apos; such that
  // ShapeUtil::ReshapeIsBitcast(input_shape, output_shape_with_layout) returns
  // true (where &apos;output_shape_with_layout&apos; is &apos;output_shape&apos; with the found
  // layout). The layout of &apos;input_shape&apos; is kept fixed. Returns
  // &apos;output_shape_with_layout&apos; if such a layout can be found, and an error
  // otherwise.</doc>
<use f='tensorflow/tensorflow/compiler/xla/service/layout_assignment.cc' l='958' u='c' c='_ZN3xla16LayoutAssignment35ChooseOperandLayoutFromOutputLayoutERKNS_6LayoutEPKNS_14HloInstructionEx'/>
<use f='tensorflow/tensorflow/compiler/xla/service/layout_assignment.cc' l='1030' u='c' c='_ZN3xla16LayoutAssignment35ChooseOutputLayoutFromOperandLayoutERKNS_6LayoutEPKNS_14HloInstructionEx'/>
<def f='tensorflow/tensorflow/compiler/xla/shape_util.cc' l='1282' ll='1414' type='static tensorflow::gtl::optional&lt;Shape&gt; xla::ShapeUtil::AlignLayouts(const xla::Shape &amp; input_shape, const xla::Shape &amp; output_shape)'/>
<doc f='tensorflow/tensorflow/compiler/xla/shape_util.cc' l='1282'>/* static */</doc>
