<dec f='include/python3.5m/unicodeobject.h' l='842' type='int PyUnicode_Resize(PyObject ** unicode, Py_ssize_t length)'/>
<doc f='include/python3.5m/unicodeobject.h' l='826'>/* Resize a Unicode object. The length is the number of characters, except
   if the kind of the string is PyUnicode_WCHAR_KIND: in this case, the length
   is the number of Py_UNICODE characters.

   *unicode is modified to point to the new (resized) object and 0
   returned on success.

   Try to resize the string in place (which is usually faster than allocating
   a new string and copy characters), or create a new string.

   Error handling is implemented as follows: an exception is set, -1
   is returned and *unicode left untouched.

   WARNING: The function doesn&apos;t check string content, the result may not be a
            string in canonical representation. */</doc>
