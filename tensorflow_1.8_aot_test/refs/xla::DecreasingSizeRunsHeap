<inh f='tensorflow/tensorflow/compiler/xla/service/heap_simulator.h' l='181' c='xla::HeapAlgorithm'/>
<def f='tensorflow/tensorflow/compiler/xla/service/heap_simulator.h' l='220' ll='246'/>
<size>48</size>
<doc f='tensorflow/tensorflow/compiler/xla/service/heap_simulator.h' l='217'>// DecreasingSizeRunsHeap collects runs of Alloc and Free calls, sorts them by
// decreasing size, and delegates the actual calls to another heap algorithm.
// This greedy heuristic tends to reduce fragmentation for all algorithms.</doc>
<fun r='_ZN3xla22DecreasingSizeRunsHeapC1ESt10unique_ptrINS_13HeapAlgorithmESt14default_deleteIS2_EE'/>
<fun r='_ZN3xla22DecreasingSizeRunsHeapD1Ev'/>
<fun r='_ZN3xla22DecreasingSizeRunsHeap5AllocEPKNS_13LogicalBufferEx'/>
<fun r='_ZN3xla22DecreasingSizeRunsHeap4FreeEPKNS_13LogicalBufferEx'/>
<fun r='_ZN3xla22DecreasingSizeRunsHeap6FinishEv'/>
<fun r='_ZN3xla22DecreasingSizeRunsHeap7SetModeENS0_4ModeE'/>
<fun r='_ZN3xla22DecreasingSizeRunsHeap15CallAndDrainRunEv'/>
<mbr r='xla::DecreasingSizeRunsHeap::algorithm_' o='64' t='const std::unique_ptr&lt;HeapAlgorithm&gt;'/>
<mbr r='xla::DecreasingSizeRunsHeap::run_' o='128' t='std::vector&lt;Op&gt;'/>
<mbr r='xla::DecreasingSizeRunsHeap::mode_' o='320' t='xla::DecreasingSizeRunsHeap::Mode'/>
