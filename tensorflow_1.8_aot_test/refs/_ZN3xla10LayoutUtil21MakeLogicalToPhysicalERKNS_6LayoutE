<dec f='tensorflow/tensorflow/compiler/xla/layout_util.h' l='173' type='static std::vector&lt;int64&gt; xla::LayoutUtil::MakeLogicalToPhysical(const xla::Layout &amp; layout)'/>
<doc f='tensorflow/tensorflow/compiler/xla/layout_util.h' l='160'>// Returns the inverse mapping of the Major() function. More precisely, return
  // a vector v such that if l == Major(p), then v[l] == p.
  //
  // This can be used to translate logical dimension numbers into physical
  // dimension numbers. Assume that we are numbering the physical dimensions so
  // that the most major physical dimension has physical dimension number 0 and
  // so on. Then a logical dimension number l corresponds to the physical
  // dimension number MakeLogicalToPhysical(layout)[l].
  //
  // As an example, consider physical dimension number 0, which by definition is
  // the most major. Then l := Major(0) is the most major logical dimension. If
  // v is the vector returned from this function, then v[l] == 0. So v maps the
  // most major logical dimension l to the physical dimension number 0.</doc>
<def f='tensorflow/tensorflow/compiler/xla/layout_util.cc' l='363' ll='371' type='static std::vector&lt;int64&gt; xla::LayoutUtil::MakeLogicalToPhysical(const xla::Layout &amp; layout)'/>
<doc f='tensorflow/tensorflow/compiler/xla/layout_util.cc' l='363'>/* static */</doc>
<use f='tensorflow/tensorflow/compiler/xla/service/llvm_ir/ir_array.cc' l='261' u='c' c='_ZNK3xla7llvm_ir7IrArray5Index22SourceIndexOfBroadcastERKNS_5ShapeES5_N10tensorflow3gtl10ArraySliceIxEEPN4llvm9IRBuilderINSA_14ConstantFolderENSA_24IR6925640'/>
<use f='tensorflow/tensorflow/compiler/xla/service/llvm_ir/ir_array.cc' l='281' u='c' c='_ZNK3xla7llvm_ir7IrArray5Index22SourceIndexOfBroadcastERKNS_5ShapeES5_N10tensorflow3gtl10ArraySliceIxEEPN4llvm9IRBuilderINSA_14ConstantFolderENSA_24IR6925640'/>
