<dec f='tensorflow/tensorflow/core/platform/env.h' l='136' type='tensorflow::Status tensorflow::Env::NewReadOnlyMemoryRegionFromFile(const string &amp; fname, std::unique_ptr&lt;ReadOnlyMemoryRegion&gt; * result)'/>
<doc f='tensorflow/tensorflow/core/platform/env.h' l='125'>/// \brief Creates a readonly region of memory with the file context.
  ///
  /// On success, it returns a pointer to read-only memory region
  /// from the content of file fname. The ownership of the region is passed to
  /// the caller. On failure stores nullptr in *result and returns non-OK.
  ///
  /// The returned memory region can be accessed from many threads in parallel.
  ///
  /// The ownership of the returned ReadOnlyMemoryRegion is passed to the caller
  /// and the object should be deleted when is not used. The memory region
  /// object shouldn&apos;t live longer than the Env object.</doc>
<use f='tensorflow/tensorflow/core/kernels/immutable_constant_op.cc' l='29' u='c' c='_ZN10tensorflow12_GLOBAL__N_124MemmappedTensorAllocator20InitializeFromRegionERKSsPNS_3EnvE'/>
<def f='tensorflow/tensorflow/core/platform/env.cc' l='136' ll='141' type='tensorflow::Status tensorflow::Env::NewReadOnlyMemoryRegionFromFile(const string &amp; fname, std::unique_ptr&lt;ReadOnlyMemoryRegion&gt; * result)'/>
<use f='tensorflow/tensorflow/core/util/memmapped_file_system.cc' l='199' u='c' c='_ZN10tensorflow19MemmappedFileSystem18InitializeFromFileEPNS_3EnvERKSs'/>
<use f='tensorflow/tensorflow/core/util/proto/descriptors.cc' l='41' u='c' c='_ZN10tensorflow12_GLOBAL__N_125GetDescriptorPoolFromFileEPNS_3EnvERKSsPSt10unique_ptrIN6google8protobuf14DescriptorPoolESt14default_deleteIS8_EE'/>
