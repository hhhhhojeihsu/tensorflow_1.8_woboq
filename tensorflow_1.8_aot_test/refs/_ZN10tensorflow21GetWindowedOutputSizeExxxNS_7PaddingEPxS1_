<dec f='tensorflow/tensorflow/core/framework/common_shape_fns.h' l='74' type='tensorflow::Status tensorflow::GetWindowedOutputSize(int64 input_size, int64 filter_size, int64 stride, tensorflow::Padding padding_type, int64 * output_size, int64 * padding_size)'/>
<doc f='tensorflow/tensorflow/core/framework/common_shape_fns.h' l='26'>// GetWindowedOutputSize(): Given an input tensor, kernel, stride and padding
// type, the function computes the output and padding dimensions.
//
// For example, ignoring batches or multiple features, a 1D convolution
// takes as input a 1D tensor of shape (H), and convolves it with a filter of
// shape (K).
//
// It also takes in a few additional parameters:
//
// Stride (S): the stride with which we apply the filters. This is the offset
// between locations where we apply the filters. A larger stride
// means that the output will be spatially smaller.
//
// Padding (P): the padding we apply to the input tensor along each
// dimension. This is usually used to make sure that the spatial dimensions
// do not shrink when we progress with convolutions. Two types of padding are
// often used:
//   SAME: the pad value is computed so that the output will have size H/S.
//   VALID: no padding is carried out.
// The padded area is zero-filled.
//
// The output dimensions for convolution and many other operations, when given
// all the parameters above, are as follows:
// - When Padding = SAME: the output size is (H&apos;), where
//     H&apos; = ceil(float(H) / float(S))
//   where ceil is the ceiling function. The number of padded cells
//   is computed as:
//     Pc = ((H&apos; - 1) * S + K - H) / 2
//   When the stride is 1, the expression simplifies to
//     H&apos; = H, Pc = (K-1)/2.
//   This is where SAME comes from - the output has the same size as the input
//   has.
//
// - When Padding = VALID: the output size is computed as
//     H&apos; = ceil(float(H - K + 1) / float(S))
//   and the number of padded cells is always zero.
//   When the stride is 1, the expression simplifies to
//     H&apos; = H-K+1.
//
// For convolution, mathematically, the output value at location (r&apos;)
// is the inner product of two vectors: the chunk of input at
//    ((r&apos;*S-Pr) : (r&apos;*S-Pr+K)),
// and the filter.
//
// For 2D and 3D convolutions, the spatial dimensions are orthogonal, so the
// size and padding of each spatial dimension can be computed by calling
// GetWindowedOutputSize separately for each dimension.
//</doc>
<def f='tensorflow/tensorflow/core/framework/common_shape_fns.cc' l='71' ll='78' type='tensorflow::Status tensorflow::GetWindowedOutputSize(int64 input_size, int64 filter_size, int64 stride, tensorflow::Padding padding_type, int64 * output_size, int64 * padding_size)'/>
<use f='tensorflow/tensorflow/core/framework/common_shape_fns.cc' l='96' u='c' c='_ZN10tensorflow15Get3dOutputSizeERKSt5arrayIxLm3EES3_S3_NS_7PaddingEPS1_S5_'/>
<use f='tensorflow/tensorflow/core/kernels/dilation_ops.cc' l='107' u='c' c='_ZN10tensorflow10ParseSizesEPNS_15OpKernelContextERKSt6vectorIiSaIiEES6_RKNS_7PaddingEPiSA_SA_SA_PxSB_SB_SB_'/>
<use f='tensorflow/tensorflow/core/kernels/dilation_ops.cc' l='110' u='c' c='_ZN10tensorflow10ParseSizesEPNS_15OpKernelContextERKSt6vectorIiSaIiEES6_RKNS_7PaddingEPiSA_SA_SA_PxSB_SB_SB_'/>
<use f='tensorflow/tensorflow/core/kernels/neon/neon_depthwise_conv_op.cc' l='92' u='c' c='_ZN10tensorflow27NeonDepthwiseConv2dNativeOp7ComputeEPNS_15OpKernelContextE'/>
<use f='tensorflow/tensorflow/core/kernels/neon/neon_depthwise_conv_op.cc' l='95' u='c' c='_ZN10tensorflow27NeonDepthwiseConv2dNativeOp7ComputeEPNS_15OpKernelContextE'/>
<use f='tensorflow/tensorflow/core/kernels/pooling_ops_3d.cc' l='84' u='c' c='_ZN10tensorflow16Pool3dParametersC1EPNS_15OpKernelContextERKSt6vectorIiSaIiEES7_NS_7PaddingENS_12TensorFormatERKNS_11TensorShapeE'/>
<use f='tensorflow/tensorflow/core/kernels/pooling_ops_3d.cc' l='88' u='c' c='_ZN10tensorflow16Pool3dParametersC1EPNS_15OpKernelContextERKSt6vectorIiSaIiEES7_NS_7PaddingENS_12TensorFormatERKNS_11TensorShapeE'/>
<use f='tensorflow/tensorflow/core/kernels/pooling_ops_3d.cc' l='91' u='c' c='_ZN10tensorflow16Pool3dParametersC1EPNS_15OpKernelContextERKSt6vectorIiSaIiEES7_NS_7PaddingENS_12TensorFormatERKNS_11TensorShapeE'/>
<use f='tensorflow/tensorflow/core/kernels/pooling_ops_common.cc' l='68' u='c' c='_ZN10tensorflow14PoolParametersC1EPNS_15OpKernelContextERKSt6vectorIiSaIiEES7_NS_7PaddingENS_12TensorFormatERKNS_11TensorShapeE'/>
<use f='tensorflow/tensorflow/core/kernels/pooling_ops_common.cc' l='71' u='c' c='_ZN10tensorflow14PoolParametersC1EPNS_15OpKernelContextERKSt6vectorIiSaIiEES7_NS_7PaddingENS_12TensorFormatERKNS_11TensorShapeE'/>
