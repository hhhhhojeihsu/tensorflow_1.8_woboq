<dec f='tensorflow/tensorflow/python/lib/core/py_func.h' l='50' type='void tensorflow::InitializePyTrampoline(PyObject * trampoline)'/>
<doc f='tensorflow/tensorflow/python/lib/core/py_func.h' l='27'>// Called by python code on initialization.
//
// &quot;trampoline&quot; must represent a python function which has the
// following signature:
//   (string, list(ndarray)) | (string, list(EagerTensor)) -&gt;
//     ndarray | list(ndarray) | python scalar |
//     EagerTensor | list(EagerTensor) | None
//
// The trampoline takes two arguments, the first is a string token
// used by the python frontend&apos;s dispatching logic; the second is a
// list of numpy ndarrays or EagerTensor objects. It can return a
// single numpy ndarray, a list of numpy ndarrays, a python scalar, an
// EagerTensor, a list of EagerTensors, or None.
//
// PyFunc requires inputs and outputs to be ndarrays. EagerPyFunc requires
// inputs to be a list of EagerTensors and outputs to be an EagerTensor, a list
// of EagerTensors, or None.
//
// The C++ runtime converts outputs back to Tensor objects.
//
// This function is called by script_ops.py during its module initialization.
//
// TODO(zhifengc): Support distributed runtime.</doc>
<def f='tensorflow/tensorflow/python/lib/core/py_func.cc' l='434' ll='442' type='void tensorflow::InitializePyTrampoline(PyObject * trampoline)'/>
