<dec f='tensorflow/tensorflow/contrib/boosted_trees/lib/utils/dropout_utils.h' l='62' type='static void tensorflow::boosted_trees::utils::DropoutUtils::GetTreesWeightsForAddingTrees(const std::vector&lt;int32&gt; &amp; dropped_trees, const std::vector&lt;float&gt; &amp; dropped_trees_original_weights, const int32 new_trees_first_index, const int32 num_trees_to_add, std::vector&lt;float&gt; * current_weights, std::vector&lt;int32&gt; * num_updates)'/>
<doc f='tensorflow/tensorflow/contrib/boosted_trees/lib/utils/dropout_utils.h' l='48'>// Recalculates the weights of the trees when the new trees are added to
  // ensemble.
  // dropped_trees: ids of trees that were dropped when trees to add were built.
  // dropped_trees_original_weights: the weight dropped trees had during dropout
  // new_trees_first_index: index of the last tree. If it is already in the
  // ensemble, its weight and num updates are adjusted. Otherwise, its weight
  // and num updates are added as new entries to current_weights and
  // num_updates. num_trees_to_add: how many trees are being added to the
  // ensemble. Returns current_weights: updated vector of the tree weights.
  // Weights of dropped trees are updated. Note that the size of returned vector
  // will be total_num_trees + num_trees_to_add (the last elements are the
  // weights of the new trees to be added) if new_trees_first_index
  // &gt;=current_weights.size num_updates: updated vector with increased number of
  // updates for dropped trees.</doc>
<use f='tensorflow/tensorflow/contrib/boosted_trees/kernels/training_ops.cc' l='480' u='c' c='_ZN10tensorflow13boosted_trees18GrowTreeEnsembleOp26UpdateTreeWeightsIfDropoutEPNS0_6models28DecisionTreeEnsembleResourceEy'/>
<def f='tensorflow/tensorflow/contrib/boosted_trees/lib/utils/dropout_utils.cc' l='108' ll='147' type='static void tensorflow::boosted_trees::utils::DropoutUtils::GetTreesWeightsForAddingTrees(const std::vector&lt;int32&gt; &amp; dropped_trees, const std::vector&lt;float&gt; &amp; dropped_trees_original_weights, const int32 new_trees_first_index, const int32 num_trees_to_add, std::vector&lt;float&gt; * current_weights, std::vector&lt;int32&gt; * num_updates)'/>
