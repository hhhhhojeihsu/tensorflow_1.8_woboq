<dec f='tensorflow/tensorflow/core/grappler/optimizers/graph_optimizer_stage.h' l='122' type='bool tensorflow::grappler::GraphOptimizerStage::IsSupported(const tensorflow::NodeDef * node) const'/>
<use f='tensorflow/tensorflow/core/grappler/optimizers/graph_optimizer_stage.h' l='142' u='c' c='_ZNK10tensorflow8grappler19GraphOptimizerStage21EnsureNodeIsSupportedEPKNS_7NodeDefE'/>
<ovr f='tensorflow/tensorflow/core/grappler/optimizers/arithmetic_optimizer.cc' l='513' c='_ZNK10tensorflow8grappler12_GLOBAL__N_118AddOpsRewriteStage11IsSupportedEPKNS_7NodeDefE'/>
<ovr f='tensorflow/tensorflow/core/grappler/optimizers/arithmetic_optimizer.cc' l='715' c='_ZNK10tensorflow8grappler12_GLOBAL__N_133HoistCommonFactorOutOfAggregation11IsSupportedEPKNS_7NodeDefE'/>
<ovr f='tensorflow/tensorflow/core/grappler/optimizers/arithmetic_optimizer.cc' l='887' c='_ZNK10tensorflow8grappler12_GLOBAL__N_118MinimizeBroadcasts11IsSupportedEPKNS_7NodeDefE'/>
<ovr f='tensorflow/tensorflow/core/grappler/optimizers/arithmetic_optimizer.cc' l='1070' c='_ZNK10tensorflow8grappler12_GLOBAL__N_123RemoveIdentityTranspose11IsSupportedEPKNS_7NodeDefE'/>
<ovr f='tensorflow/tensorflow/core/grappler/optimizers/arithmetic_optimizer.cc' l='1161' c='_ZNK10tensorflow8grappler12_GLOBAL__N_127RemoveRedundantBitcastStage11IsSupportedEPKNS_7NodeDefE'/>
<ovr f='tensorflow/tensorflow/core/grappler/optimizers/arithmetic_optimizer.cc' l='1201' c='_ZNK10tensorflow8grappler12_GLOBAL__N_124RemoveRedundantCastStage11IsSupportedEPKNS_7NodeDefE'/>
<ovr f='tensorflow/tensorflow/core/grappler/optimizers/arithmetic_optimizer.cc' l='1221' c='_ZNK10tensorflow8grappler12_GLOBAL__N_119RemoveNegationStage11IsSupportedEPKNS_7NodeDefE'/>
<doc f='tensorflow/tensorflow/core/grappler/optimizers/graph_optimizer_stage.h' l='117'>// Check if we should try to simplify node. Returning true doesn&apos;t
  // guarantee that node will be simplified.
  //
  // Should implement just a basic sanity check, without any expensive graph
  // traversals.</doc>
