<dec f='tensorflow/tensorflow/core/util/rpc/rpc_factory.h' l='57' type='void tensorflow::RPCFactory::Call(tensorflow::OpKernelContext * ctx, int64 num_elements, const tensorflow::Tensor &amp; address_t, const tensorflow::Tensor &amp; method_t, const tensorflow::Tensor &amp; request_t, const bool try_rpc, tensorflow::Tensor * response_t, tensorflow::Tensor * status_code_t, tensorflow::Tensor * status_message_t, AsyncOpKernel::DoneCallback done)'/>
<ovr f='tensorflow/tensorflow/core/distributed_runtime/rpc/grpc_rpc_factory.cc' l='107' c='_ZN10tensorflow14GrpcRPCFactory4CallEPNS_15OpKernelContextExRKNS_6TensorES5_S5_bPS3_S6_S6_St8functionIFvvEE'/>
<doc f='tensorflow/tensorflow/core/util/rpc/rpc_factory.h' l='35'>// Start a Call() to methods `method_t` at addresses `address_t` with
  // request strings from `request_t`.  Any of these may be scalar
  // Tensors, in which case the operands are broadcasted.
  // Upon completion of all requests, `response_t` will be populated.
  //
  // If `try_rpc` is `true`, then `status_message_t` and
  // `status_code_t` will be populated as well.
  //
  // If `try_rpc` is `false`, then `status_message_t` and
  // `status_code_t` are ignored (and may be nullptr).  Instead, the
  // status of any failed call will be propagated to the op.
  //
  // REQUIRES:
  //   - `response_t` is not null, and is a string Tensor with the same shape as
  //     `request_t`.
  //
  //   If `try_rpc` is `true`:
  //      - `status_code_t` and `status_message_t` are not null.
  //      - `status_code_t` is an int32 Tensor with the same shape as
  //        `request_t`.
  //      - `status_message_t` is a string Tensor with the same shape as
  //        `request_t`.</doc>
<use f='tensorflow/tensorflow/core/kernels/rpc_op.cc' l='114' u='c' c='_ZN10tensorflow5RpcOp12ComputeAsyncEPNS_15OpKernelContextESt8functionIFvvEE'/>
