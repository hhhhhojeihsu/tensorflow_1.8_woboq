<dec f='tensorflow/tensorflow/compiler/xla/service/llvm_ir/llvm_util.h' l='272' type='std::map&lt;int, llvm::MDNode *&gt; xla::llvm_ir::MergeMetadata(llvm::LLVMContext * context, const std::map&lt;int, llvm::MDNode *&gt; &amp; a, const std::map&lt;int, llvm::MDNode *&gt; &amp; b)'/>
<doc f='tensorflow/tensorflow/compiler/xla/service/llvm_ir/llvm_util.h' l='268'>// Computes a conservative union of the metadata in &quot;a&quot; and &quot;b&quot;.  For
// aliasing-related metadata, this means the result can be applied to
// instructions whose aliasing relationship can be described either by &quot;a&quot; *or*
// by &quot;b&quot;.</doc>
<use f='tensorflow/tensorflow/compiler/xla/service/cpu/ir_emitter.cc' l='2452' u='c' c='_ZN3xla3cpu9IrEmitter20EmitTransferElementsEPN4llvm5ValueES4_xNS_13PrimitiveTypeERKNS_7llvm_ir7IrArrayES9_'/>
<def f='tensorflow/tensorflow/compiler/xla/service/llvm_ir/llvm_util.cc' l='636' ll='682' type='std::map&lt;int, llvm::MDNode *&gt; xla::llvm_ir::MergeMetadata(llvm::LLVMContext * context, const std::map&lt;int, llvm::MDNode *&gt; &amp; a, const std::map&lt;int, llvm::MDNode *&gt; &amp; b)'/>
