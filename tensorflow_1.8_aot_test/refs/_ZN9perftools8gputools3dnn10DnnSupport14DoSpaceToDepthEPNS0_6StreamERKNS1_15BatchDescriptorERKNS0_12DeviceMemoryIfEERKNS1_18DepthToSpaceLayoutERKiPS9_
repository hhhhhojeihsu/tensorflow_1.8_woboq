<def f='tensorflow/tensorflow/stream_executor/dnn.h' l='1790' ll='1797' type='bool perftools::gputools::dnn::DnnSupport::DoSpaceToDepth(perftools::gputools::Stream * stream, const dnn::BatchDescriptor &amp; input_dimensions, const DeviceMemory&lt;float&gt; &amp; input_data, const perftools::gputools::dnn::DepthToSpaceLayout &amp; space_to_depth_layout, const int &amp; sqrt_depth_increase, DeviceMemory&lt;float&gt; * output_data)'/>
<doc f='tensorflow/tensorflow/stream_executor/dnn.h' l='1770'>// Space to depth is the inverse of depth to space. Space to depth takes each
  // non-overlapping M by M patch (in the X and Y dimensions) with depth D of
  // the input, and transforms it to a 1 by 1 patch with depth D*M². If the
  // input has size (MX, MY, D), the output has size (X, Y, D*M²). The number of
  // data elements is not changed.
  //
  // Example.
  // M=2, Din =2, Xin=4, Yin=4,  Dout=8
  // DepthHeightWidth layout
  // Values within a &apos;cell&apos; are at different depths and same x &amp; y.
  // Input:
  // ae bf im jn
  // cg dh ko lp
  // qu rv y2 z3
  // sw tx 04 15
  // Output:
  // abcdefgh  ijklmnop
  // qrstuvwx  yz012345
  //
  // sqrt_depth_increase: &apos;M&apos; in the comment above</doc>
<use f='tensorflow/tensorflow/stream_executor/stream.cc' l='1717' u='c' c='_ZN9perftools8gputools6Stream16ThenSpaceToDepthERKNS0_3dnn15BatchDescriptorERKNS0_12DeviceMemoryIfEERKNS2_18DepthToSpaceLayoutEiPS7_'/>
