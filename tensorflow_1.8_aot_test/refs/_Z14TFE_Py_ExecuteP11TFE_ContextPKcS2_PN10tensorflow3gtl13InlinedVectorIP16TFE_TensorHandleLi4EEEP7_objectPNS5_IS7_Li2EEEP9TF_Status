<dec f='tensorflow/tensorflow/python/eager/pywrap_tfe.h' l='43' type='void TFE_Py_Execute(TFE_Context * ctx, const char * device_name, const char * op_name, TFE_InputTensorHandles * inputs, PyObject * attrs, TFE_OutputTensorHandles * outputs, TF_Status * out_status)'/>
<doc f='tensorflow/tensorflow/python/eager/pywrap_tfe.h' l='29'>// Execute a TensorFlow operation.
//
// &apos;device_name&apos;: Name of the device on which to execute the operation, or NULL
//                for automatic selection.
// &apos;op_name&apos;: Name of the TensorFlow op to execute.
// &apos;inputs&apos;: An array of TFE_TensorHandle*&apos;s of size &apos;num_inputs&apos;. These tensors
//           will be provided as input to the operation.
// &apos;attrs&apos;: A Python tuple alternating names and attr values.
// &apos;outputs&apos;: A pointer to a TFE_OutputTensorHandles in which outputs will
//            placed. On success, its elements will be filled in and the
//            caller takes ownership of each returned TFE_TensorHandle.
//            &apos;outputs&apos; MUST be sized to be at least as large as the number
//            of tensors produced by the operation and will be resized to
//            the actual number of tensors produced.</doc>
<def f='tensorflow/tensorflow/python/eager/pywrap_tfe_src.cc' l='574' ll='604' type='void TFE_Py_Execute(TFE_Context * ctx, const char * device_name, const char * op_name, TFE_InputTensorHandles * inputs, PyObject * attrs, TFE_OutputTensorHandles * outputs, TF_Status * out_status)'/>
