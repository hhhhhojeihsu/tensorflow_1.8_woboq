<def f='tensorflow/tensorflow/core/framework/function.h' l='71' ll='168'/>
<size>1</size>
<doc f='tensorflow/tensorflow/core/framework/function.h' l='45'>// FunctionDefHelper::Create is a convenient helper to construct a
// FunctionDef proto.
// E.g.,
//   FunctionDef my_func = FunctionDefHelper::Create(
//     &quot;my_func_name&quot;,
//     {&quot;x:T&quot;, &quot;y:T&quot; /* one string per argument */},
//     {&quot;z:T&quot; /* one string per return value */},
//     {&quot;T: {float, double}&quot; /* one string per attribute  */},
//     {
//        {{&quot;o&quot;}, &quot;Mul&quot;, {&quot;x&quot;, &quot;y&quot;}, {{&quot;T&quot;, &quot;$T&quot;}}}
//        /* one entry per function node */
//     },
//     /* Mapping between function returns and function node outputs. */
//     {{&quot;z&quot;, &quot;o:z&quot;}});
//
// For the old Function::Node approach, use FunctionDefHelper::Define()
// E.g.,
//   FunctionDef my_func = FunctionDefHelper::Define(
//     &quot;my_func_name&quot;,
//     {&quot;x:T&quot;, &quot;y:T&quot; /* one string per argument */},
//     {&quot;z:T&quot; /* one string per return value */},
//     {&quot;T: {float, double}&quot; /* one string per attribute  */},
//     {
//        {{&quot;z&quot;}, &quot;Mul&quot;, {&quot;x&quot;, &quot;y&quot;}, {{&quot;T&quot;, &quot;$T&quot;}}}
//        /* one entry per function node */
//     });</doc>
<fun r='_ZN10tensorflow17FunctionDefHelper11FunctionRefERKSsNS_3gtl10ArraySliceISt4pairISsNS0_16AttrValueWrapperEEEE'/>
<fun r='_ZN10tensorflow17FunctionDefHelper11FunctionRefERKSs'/>
<fun r='_ZN10tensorflow17FunctionDefHelper6CreateERKSsNS_3gtl10ArraySliceISsEES5_S5_NS4_INS0_4NodeEEENS4_ISt4pairISsSsEEE'/>
<fun r='_ZN10tensorflow17FunctionDefHelper6DefineERKSsNS_3gtl10ArraySliceISsEES5_S5_NS4_INS0_4NodeEEE'/>
<fun r='_ZN10tensorflow17FunctionDefHelper6DefineENS_3gtl10ArraySliceISsEES3_S3_NS2_INS0_4NodeEEE'/>
<fun r='_ZN10tensorflow17FunctionDefHelper5ConstERKSsRKT_'/>
<fun r='_ZN10tensorflow17FunctionDefHelper5ConstERKSsNS_3gtl10ArraySliceIT_EE'/>
