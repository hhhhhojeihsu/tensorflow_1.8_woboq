<inh f='tensorflow/tensorflow/compiler/tf2xla/xla_op_kernel.h' l='33' c='tensorflow::XlaOpKernel'/>
<def f='tensorflow/tensorflow/compiler/tf2xla/kernels/if_op.h' l='41' ll='55'/>
<size>568</size>
<doc f='tensorflow/tensorflow/compiler/tf2xla/kernels/if_op.h' l='24'>// This TensorFlow op provides a functional conditional primitive.
//
// The outputs of the then/else branches must agree on the number, types, and
// shapes of the Tensors carried around the two bodies.
//
// Computations in then/else bodies may read from and write to resource
// variables.
// Resource variables may be passed as arguments to the then/else function&apos;s
// bodies. The XlaCompiler converts resource variable arguments
// into parameters to the XLA computation and moves them to the end of the
// parameter list, and by using the `return_updated_values_for_all_variables`
// we ensure that all variables that appear in the input also appear at the
// end of the then/else bodies output. This ensures the then/else bodies output
// signatures match.
//
// It is the user&apos;s responsibility to ensure that each non-variable _Arg matches
// the corresponding _Retval.</doc>
<fun r='_ZN10tensorflow7XlaIfOpC1EPNS_20OpKernelConstructionE'/>
<fun r='_ZN10tensorflow7XlaIfOp7CompileEPNS_18XlaOpKernelContextE'/>
<fun r='_ZN10tensorflow7XlaIfOpC1ERKS0_'/>
<mbr r='tensorflow::XlaIfOp::then_branch_' o='2304' t='tensorflow::NameAttrList'/>
<mbr r='tensorflow::XlaIfOp::else_branch_' o='3136' t='tensorflow::NameAttrList'/>
<mbr r='tensorflow::XlaIfOp::cond_type_' o='3968' t='tensorflow::DataType'/>
<mbr r='tensorflow::XlaIfOp::input_types_' o='4032' t='DataTypeVector'/>
<mbr r='tensorflow::XlaIfOp::output_types_' o='4288' t='DataTypeVector'/>
<fun r='_ZN10tensorflow7XlaIfOpC1EPNS_20OpKernelConstructionE'/>
<fun r='_ZN10tensorflow7XlaIfOp7CompileEPNS_18XlaOpKernelContextE'/>
