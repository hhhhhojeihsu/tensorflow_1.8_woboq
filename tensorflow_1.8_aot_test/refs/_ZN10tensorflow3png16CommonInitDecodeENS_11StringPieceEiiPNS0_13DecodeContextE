<dec f='tensorflow/tensorflow/core/lib/png/png_io.h' l='75' type='bool tensorflow::png::CommonInitDecode(tensorflow::StringPiece png_string, int desired_channels, int desired_channel_bits, tensorflow::png::DecodeContext * context)'/>
<doc f='tensorflow/tensorflow/core/lib/png/png_io.h' l='64'>// Sample usage for reading PNG:
//
// string png_string;  /* fill with input PNG format data */
// DecodeContext context;
// CHECK(CommonInitDecode(png_string, 3 /*RGB*/, 8 /*uint8*/, &amp;context));
// char* image_buffer = new char[3*context.width*context.height];
// CHECK(CommonFinishDecode(bit_cast&lt;png_byte*&gt;(image_buffer),
//       3*context.width /*stride*/, &amp;context));
//
// desired_channels may be 0 to detected it from the input.</doc>
<use f='tensorflow/tensorflow/core/kernels/decode_image_op.cc' l='238' u='c' c='_ZN10tensorflow12_GLOBAL__N_113DecodeImageOp9DecodePngEPNS_15OpKernelContextENS_11StringPieceE'/>
<use f='tensorflow/tensorflow/core/lib/png/png_io.cc' l='143' u='c' c='_ZN10tensorflow3png12DecodeHeaderENS_11StringPieceEPiS2_S2_S2_PSt6vectorISt4pairISsSsESaIS5_EE'/>
<def f='tensorflow/tensorflow/core/lib/png/png_io.cc' l='193' ll='292' type='bool tensorflow::png::CommonInitDecode(tensorflow::StringPiece png_string, int desired_channels, int desired_channel_bits, tensorflow::png::DecodeContext * context)'/>
