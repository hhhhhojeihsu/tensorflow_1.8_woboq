<dec f='tensorflow/tensorflow/compiler/xla/client/computation_builder.h' l='810' type='StatusOr&lt;std::unique_ptr&lt;Literal&gt; &gt; xla::ComputationBuilder::ComputeConstant(const xla::ComputationDataHandle &amp; operand, const xla::Layout * output_layout = nullptr, tensorflow::gtl::ArraySlice&lt;Literal&gt; parameters = {})'/>
<doc f='tensorflow/tensorflow/compiler/xla/client/computation_builder.h' l='781'>// Computes the value of a constant indicated by a
  // ComputationDataHandle using a non-optimized interpreter on the host.
  //
  // The operand must be from the computation currently being built -
  // i.e., returned from this builder with no intervening call to
  // Build(). This happens to currently work regardless of that, but
  // that may stop working at any time.
  //
  // The operand must represent a constant value, which in this case
  // means that it must not statically depend on any parameter of the
  // computation that is being built other then the ones specified on the
  // parameter list. The parameters in the list will be indexed by their
  // parameter id property so the number of parameters specified should be at
  // least as many as the largest used parameter index.
  //
  // `IsConstant` can be used to test whether a computation is a compile-time
  // constant without evaluation it. `ComputeConstant` only succeeds for
  // computations where `IsConstant` returns true.
  //
  // This functionality can be useful when translating a computation
  // into XLA where something that looked dynamic is required by
  // XLA to be specified as a constant. E.g. the source
  // computation (outside of XLA) may include a dynamic
  // computation of the shape of something and ComputeConstant lets
  // you determine what the value of that computation is in the case
  // where the value can be determined at compile time.
  //
  // If output_layout is non-null, then the output of the computation
  // will be stored using that layout.</doc>
<use f='tensorflow/tensorflow/compiler/tf2xla/graph_compiler.cc' l='76' u='c' c='_ZN10tensorflow12_GLOBAL__N_116PrepareArgumentsEPNS_18XlaOpKernelContextEPNS_5GraphERKSt6vectorIPKNS_13XlaExpressionESaIS8_EEPS5_INS_11XlaCompiler8ArgumentESaISE_EE'/>
<use f='tensorflow/tensorflow/compiler/tf2xla/xla_op_kernel.cc' l='145' u='c' c='_ZN10tensorflow18XlaOpKernelContext21ConstantInputReshapedEiNS_3gtl10ArraySliceIxEEPN3xla7LiteralE'/>
<def f='tensorflow/tensorflow/compiler/xla/client/computation_builder.cc' l='1147' ll='1180' type='StatusOr&lt;std::unique_ptr&lt;Literal&gt; &gt; xla::ComputationBuilder::ComputeConstant(const xla::ComputationDataHandle &amp; operand, const xla::Layout * output_layout = nullptr, tensorflow::gtl::ArraySlice&lt;Literal&gt; parameters = {})'/>
