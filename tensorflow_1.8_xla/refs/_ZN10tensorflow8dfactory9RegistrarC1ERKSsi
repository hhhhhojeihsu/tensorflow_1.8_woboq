<def f='tensorflow/tensorflow/core/common_runtime/device_factory.h' l='107' ll='109' type='void tensorflow::dfactory::Registrar::Registrar&lt;Factory&gt;(const string &amp; device_type, int priority = 50)'/>
<doc f='tensorflow/tensorflow/core/common_runtime/device_factory.h' l='76'>// Multiple registrations for the same device type with different priorities
  // are allowed.  Priorities are used in two different ways:
  //
  // 1) When choosing which factory (that is, which device
  //    implementation) to use for a specific &apos;device_type&apos;, the
  //    factory registered with the highest priority will be chosen.
  //    For example, if there are two registrations:
  //
  //      Registrar&lt;CPUFactory1&gt;(&quot;CPU&quot;, 125);
  //      Registrar&lt;CPUFactory2&gt;(&quot;CPU&quot;, 150);
  //
  //    then CPUFactory2 will be chosen when
  //    DeviceFactory::GetFactory(&quot;CPU&quot;) is called.
  //
  // 2) When choosing which &apos;device_type&apos; is preferred over other
  //    DeviceTypes in a DeviceSet, the ordering is determined
  //    by the &apos;priority&apos; set during registration.  For example, if there
  //    are two registrations:
  //
  //      Registrar&lt;CPUFactory&gt;(&quot;CPU&quot;, 100);
  //      Registrar&lt;GPUFactory&gt;(&quot;GPU&quot;, 200);
  //
  //    then DeviceType(&quot;GPU&quot;) will be prioritized higher than
  //    DeviceType(&quot;CPU&quot;).
  //
  // The default priority values for built-in devices is:
  // GPU: 210
  // SYCL: 200
  // GPUCompatibleCPU: 70
  // ThreadPoolDevice: 60
  // Default: 50</doc>
<use f='tensorflow/tensorflow/compiler/jit/xla_cpu_device.cc' l='61' macro='1' u='c'/>
<use f='tensorflow/tensorflow/core/common_runtime/threadpool_device_factory.cc' l='48' macro='1' u='c'/>
