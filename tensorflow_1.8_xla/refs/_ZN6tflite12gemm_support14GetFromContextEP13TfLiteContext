<dec f='tensorflow/tensorflow/contrib/lite/kernels/gemm_support.h' l='38' type='int * tflite::gemm_support::GetFromContext(TfLiteContext * context)'/>
<doc f='tensorflow/tensorflow/contrib/lite/kernels/gemm_support.h' l='24'>// Returns the GemmContext stored in &apos;context&apos;, allowing multiple ops to
// share a single object, as long as they share a TfLiteContext. The caller
// must ensure that this is called between IncrementUsageCounter() and
// DecrementUsageCounter(). For example, in the implementation of an op:
//   void* Init(TfLiteContext* context, const char*, size_t) {
//     gemm_support::IncrementUsageCounter(context);
//     return nullptr;
//   }
//   void Free(TfLiteContext* context, void*) {
//     gemm_support::DecrementUsageCounter(context);
//   }
//   TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {
//     auto* gemm_context = gemm_support::GetFromContext(context);
//   }</doc>
