<dec f='tensorflow/tensorflow/compiler/tf2xla/xla_op_registry.h' l='201' type='static bool tensorflow::XlaOpRegistry::IsCompatible(const tensorflow::XlaOpRegistry::OpRegistration &amp; x, const tensorflow::XlaOpRegistry::OpRegistration &amp; y)'/>
<doc f='tensorflow/tensorflow/compiler/tf2xla/xla_op_registry.h' l='196'>// Returns true if registrations x and y can both be added to the registry.
  // This is always the case if they refer to different ops. If they refer to
  // the same op name, they must: have the same values for compilation_only and
  // allow_resource_types; use a device_whitelist; and their
  // whitelists must not intersect.</doc>
<def f='tensorflow/tensorflow/compiler/tf2xla/xla_op_registry.cc' l='59' ll='92' type='static bool tensorflow::XlaOpRegistry::IsCompatible(const tensorflow::XlaOpRegistry::OpRegistration &amp; x, const tensorflow::XlaOpRegistry::OpRegistration &amp; y)'/>
<use f='tensorflow/tensorflow/compiler/tf2xla/xla_op_registry.cc' l='384' u='c' c='_ZN10tensorflow14XlaOpRegistrarC1ESt10unique_ptrINS_13XlaOpRegistry14OpRegistrationESt14default_deleteIS3_EE'/>
<doc f='tensorflow/tensorflow/compiler/tf2xla/xla_op_registry.cc' l='57'>// TODO(b/64575122) consider adding more sophisticated definitions of
// compatibility if needed by future use cases.</doc>
<doc f='tensorflow/tensorflow/compiler/tf2xla/xla_op_registry.cc' l='59'>/* static */</doc>
