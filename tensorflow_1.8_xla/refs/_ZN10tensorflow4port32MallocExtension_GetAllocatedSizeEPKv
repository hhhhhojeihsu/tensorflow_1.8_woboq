<dec f='tensorflow/tensorflow/core/platform/mem.h' l='60' type='std::size_t tensorflow::port::MallocExtension_GetAllocatedSize(const void * p)'/>
<doc f='tensorflow/tensorflow/core/platform/mem.h' l='45'>// Returns the actual number N of bytes reserved by the malloc for the
// pointer p.  This number may be equal to or greater than the number
// of bytes requested when p was allocated.
//
// This routine is just useful for statistics collection.  The
// client must *not* read or write from the extra bytes that are
// indicated by this call.
//
// Example, suppose the client gets memory by calling
//    p = malloc(10)
// and GetAllocatedSize(p) may return 16.  The client must only use the
// first 10 bytes p[0..9], and not attempt to read or write p[10..15].
//
// Currently, if a malloc implementation does not support this
// routine, this routine returns 0.</doc>
<use f='tensorflow/tensorflow/core/framework/allocator.cc' l='108' u='c' c='_ZN10tensorflow12CPUAllocator11AllocateRawEmm'/>
<use f='tensorflow/tensorflow/core/framework/allocator.cc' l='131' u='c' c='_ZN10tensorflow12CPUAllocator13DeallocateRawEPv'/>
<use f='tensorflow/tensorflow/core/framework/allocator.cc' l='151' u='c' c='_ZN10tensorflow12CPUAllocator17AllocatedSizeSlowEPKv'/>
<def f='tensorflow/tensorflow/core/platform/posix/port.cc' l='130' type='std::size_t tensorflow::port::MallocExtension_GetAllocatedSize(const void * p)'/>
