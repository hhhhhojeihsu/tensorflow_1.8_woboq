<def f='tensorflow/tensorflow/core/framework/shape_inference.h' l='278' ll='286' type='bool tensorflow::shape_inference::InferenceContext::RelaxInput(int idx, tensorflow::shape_inference::ShapeHandle shape)'/>
<doc f='tensorflow/tensorflow/core/framework/shape_inference.h' l='253'>// Relax the stored shape of the input in position idx with &lt;shape&gt; according
  // to the following rules:
  //
  // - If the ShapeHandles are the same then the stored shape will be returned.
  // - If either of the ShapeHandles are unknown, then a new UnknownShape will
  //   be returned. A new shape must be returned because we cannot claim that
  //   the resulting shape is necessarily the same as either of the input
  //   shapes.
  // - If the shapes both have known ranks but their ranks are different, a new
  //   UnknownShape will be returned.
  // - For any one dimension, if the value for that dimension in either of the
  //   shapes is unknown, a new shape will be returned with a new UnknownDim in
  //   that dimension.
  // - For any one dimension, if the values for that dimension in both shapes
  //   are known but do not match, a new shape will be returned with a new
  //   UnknownDim in that dimension.
  // - If both shapes have the same known rank and match in every dimension,
  //   the stored shape will be returned.
  // - Example: relaxing [2,?] and [?,2] results in [?,?]
  // - Example: relaxing [2,2] and [3,2] results in [?,2]
  // - Example: relaxing [2,2] with [1,2,3] results in ?
  //
  // This requires idx to be in the [0, num_inputs) range. If the relax is
  // successful and the new shape differs from the old one, store the new
  // shape and return true. Return false otherwise.</doc>
<use f='tensorflow/tensorflow/core/common_runtime/shape_refiner.cc' l='347' u='c' c='_ZN10tensorflow12ShapeRefiner10UpdateNodeEPKNS_4NodeEbPb'/>
<use f='tensorflow/tensorflow/core/grappler/costs/graph_properties.cc' l='716' u='c' c='_ZN10tensorflow8grappler15GraphProperties15UpdateMergeNodeEPNS0_20SymbolicShapeRefinerEPKNS_4NodeEbPNS0_9TopoQueueE'/>
<use f='tensorflow/tensorflow/core/grappler/costs/graph_properties.cc' l='773' u='c' c='_ZN10tensorflow8grappler15GraphProperties11UpdateEnterEPNS0_20SymbolicShapeRefinerEPKNS_4NodeEbPNS0_9TopoQueueE'/>
