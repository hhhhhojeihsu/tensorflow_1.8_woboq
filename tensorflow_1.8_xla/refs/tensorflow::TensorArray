<inh f='tensorflow/tensorflow/core/framework/resource_mgr.h' l='76' c='tensorflow::ResourceBase'/>
<def f='tensorflow/tensorflow/core/kernels/tensor_array.h' l='131' ll='437'/>
<size>152</size>
<doc f='tensorflow/tensorflow/core/kernels/tensor_array.h' l='101'>// The TensorArray object keeps an array of PersistentTensors.  It
// allows reading from the array and writing to the array.
//
// Important properties:
//   * Usually, writing to a particular index in the TensorArray is allowed at
//     most once per index.  In a special case, writes with the flag
//     multiple_writes_aggregate allow multiple writes to the same
//     index.  In this case, the writes are summed.
//   * Multiple reads are supported.
//   * Deep copies of PersistentTensors are rarely made.  The only
//     time they are made is when WriteOrAggregate is called at least twice
//     on the same index with the flag multiple_writes_aggregate = True.
//   * Reading and Writing to the array is protected by a mutex.
//     All operations on a TensorArray are thread-safe.
//   * A TensorArray may be preemptively closed, which releases all
//     memory associated with it.
//
// These properties together allow the TensorArray to work as a
// functional object and makes gradient computation easy.  For
// example:
//   * Write-Once semantics mean the gradient of a TensorArray Read never has to
//     worry which of multiple writes to that index the gradient value
//     is meant for.
//   * Read-Many semantics (when using clear_after_read=false) allow the
//     TensorArray to be read, packed, or concatenated multiple times;
//     and the gradient operations use the multiple_writes_aggregate
//     flag to aggregate the backprop writes.  Multiple backprop writes to
//     the same index are partial gradients corresponding to the
//     multiple reads of that index in the forward phase.
//</doc>
<smbr r='tensorflow::TensorArray::tensor_array_counter' t='std::atomic&lt;int64&gt;'/>
<fun r='_ZN10tensorflow11TensorArrayC1ERKSsRKNS_8DataTypeERKNS_6TensorEiRKNS_18PartialTensorShapeEbbbbib'/>
<fun r='_ZN10tensorflow11TensorArray16WriteOrAggregateEPNS_15OpKernelContextEiPNS_16PersistentTensorE'/>
<fun r='_ZN10tensorflow11TensorArray20WriteOrAggregateManyEPNS_15OpKernelContextERKSt6vectorIiSaIiEEPS3_INS_16PersistentTensorESaIS8_EE'/>
<fun r='_ZN10tensorflow11TensorArray4ReadEPNS_15OpKernelContextEiPNS_16PersistentTensorE'/>
<fun r='_ZN10tensorflow11TensorArray8ReadManyEPNS_15OpKernelContextERKSt6vectorIiSaIiEEPS3_INS_16PersistentTensorESaIS8_EE'/>
<fun r='_ZNK10tensorflow11TensorArray8ElemTypeEv'/>
<fun r='_ZN10tensorflow11TensorArray9ElemShapeEv'/>
<fun r='_ZN10tensorflow11TensorArray12SetElemShapeERKNS_18PartialTensorShapeE'/>
<fun r='_ZN10tensorflow11TensorArray11DebugStringEv'/>
<fun r='_ZN10tensorflow11TensorArray8IsClosedEv'/>
<fun r='_ZN10tensorflow11TensorArray4SizeEPi'/>
<fun r='_ZN10tensorflow11TensorArray13SetMarkedSizeEi'/>
<fun r='_ZN10tensorflow11TensorArray10MarkedSizeEPi'/>
<fun r='_ZN10tensorflow11TensorArray16PackOrConcatSizeEPi'/>
<fun r='_ZN10tensorflow11TensorArray18DisableDynamicSizeEv'/>
<fun r='_ZN10tensorflow11TensorArray14HasDynamicSizeEv'/>
<fun r='_ZN10tensorflow11TensorArray16GradientsAllowedEv'/>
<fun r='_ZNK10tensorflow11TensorArray25HasIdenticalElementShapesEv'/>
<fun r='_ZN10tensorflow11TensorArray14CopyShapesFromEPS0_'/>
<fun r='_ZN10tensorflow11TensorArray18ClearAndMarkClosedEv'/>
<fun r='_ZN10tensorflow11TensorArray2muEv'/>
<fun r='_ZN10tensorflow11TensorArray6handleEv'/>
<fun r='_ZN10tensorflow11TensorArray15resource_handleEPNS_15OpKernelContextE'/>
<fun r='_ZN10tensorflow11TensorArray11LockedWriteEPNS_15OpKernelContextEiPNS_16PersistentTensorE'/>
<fun r='_ZN10tensorflow11TensorArray22LockedWriteOrAggregateEPNS_15OpKernelContextEiPNS_16PersistentTensorE'/>
<fun r='_ZN10tensorflow11TensorArray10LockedReadEPNS_15OpKernelContextEiPNS_16PersistentTensorE'/>
<fun r='_ZNK10tensorflow11TensorArray20LockedReturnIfClosedEv'/>
<mbr r='tensorflow::TensorArray::key_' o='128' t='const string'/>
<mbr r='tensorflow::TensorArray::dtype_' o='192' t='const tensorflow::DataType'/>
<mbr r='tensorflow::TensorArray::handle_' o='256' t='tensorflow::Tensor'/>
<mbr r='tensorflow::TensorArray::mu_' o='512' t='tensorflow::mutex'/>
<mbr r='tensorflow::TensorArray::closed_' o='640' t='bool'/>
<mbr r='tensorflow::TensorArray::dynamic_size_' o='648' t='bool'/>
<mbr r='tensorflow::TensorArray::multiple_writes_aggregate_' o='656' t='const bool'/>
<mbr r='tensorflow::TensorArray::gradients_disallowed_' o='664' t='bool'/>
<mbr r='tensorflow::TensorArray::clear_after_read_' o='672' t='const bool'/>
<mbr r='tensorflow::TensorArray::is_grad_' o='680' t='const bool'/>
<mbr r='tensorflow::TensorArray::marked_size_' o='704' t='int32'/>
<mbr r='tensorflow::TensorArray::element_shape_' o='768' t='tensorflow::PartialTensorShape'/>
<mbr r='tensorflow::TensorArray::identical_element_shapes_' o='960' t='const bool'/>
<mbr r='tensorflow::TensorArray::tensors_' o='1024' t='std::vector&lt;TensorAndState&gt;'/>
<fun r='_ZN10tensorflow11TensorArray22LockedWriteOrAggregateEPNS_15OpKernelContextEiPNS_16PersistentTensorE'/>
<fun r='_ZN10tensorflow11TensorArray10LockedReadEPNS_15OpKernelContextEiPNS_16PersistentTensorE'/>
<smbr r='tensorflow::TensorArray::tensor_array_counter' t='std::atomic&lt;int64&gt;'/>
<fun r='_ZN10tensorflow11TensorArray14CopyShapesFromEPS0_'/>
