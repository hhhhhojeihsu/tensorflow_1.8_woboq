<dec f='tensorflow/tensorflow/core/common_runtime/memory_types.h' l='38' type='tensorflow::Status tensorflow::EnsureMemoryTypes(const tensorflow::DeviceType &amp; device_type, const string &amp; device_name, tensorflow::Graph * g)'/>
<doc f='tensorflow/tensorflow/core/common_runtime/memory_types.h' l='29'>// Updates &apos;*g&apos; so that every edge&apos;s source and destination has
// compatible memory types by inserting proper HostSend/Recv and
// Send/HostRecv nodes.  &apos;device_type&apos; specifies the type of device on
// which &apos;*g&apos; is going to run on and that device has the name
// &apos;device_name&apos;.
//
// Returns OK if &apos;*g&apos; is updated properly (ValidateMemoryTypes(g) must
// be OK). Otherwise, returns an error and &apos;*g&apos; may be in an
// invalidate state and the caller should discard it.</doc>
<use f='tensorflow/tensorflow/core/common_runtime/direct_session.cc' l='1177' u='c' c='_ZN10tensorflow13DirectSession15CreateExecutorsERKNS_15CallableOptionsEPSt10unique_ptrINS0_16ExecutorsAndKeysESt14default_deleteIS5_EEPS4_INS0_12Funct10670497'/>
<use f='tensorflow/tensorflow/core/common_runtime/function.cc' l='644' u='c' c='_ZN10tensorflow26FunctionLibraryRuntimeImpl10CreateItemEyPPNS0_4ItemE'/>
<def f='tensorflow/tensorflow/core/common_runtime/memory_types.cc' l='149' ll='202' type='tensorflow::Status tensorflow::EnsureMemoryTypes(const tensorflow::DeviceType &amp; device_type, const string &amp; device_name, tensorflow::Graph * g)'/>
<use f='tensorflow/tensorflow/core/distributed_runtime/graph_mgr.cc' l='267' u='c' c='_ZN10tensorflow8GraphMgr8InitItemERKSsRKNS_8GraphDefERKNS_12GraphOptionsERKNS_12DebugOptionsEPNS_33DistributedFunctionLibraryRuntimeEPNS0_4ItemE'/>
