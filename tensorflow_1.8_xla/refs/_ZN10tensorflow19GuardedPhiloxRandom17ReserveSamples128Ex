<dec f='tensorflow/tensorflow/core/util/guarded_philox_random.h' l='56' type='random::PhiloxRandom tensorflow::GuardedPhiloxRandom::ReserveSamples128(int64 samples)'/>
<use f='tensorflow/tensorflow/core/util/guarded_philox_random.h' l='60' u='c' c='_ZN10tensorflow19GuardedPhiloxRandom16ReserveSamples32Ex'/>
<use f='tensorflow/tensorflow/core/util/guarded_philox_random.h' l='67' u='c' c='_ZN10tensorflow19GuardedPhiloxRandom20ReserveRandomOutputsExi'/>
<doc f='tensorflow/tensorflow/core/util/guarded_philox_random.h' l='53'>// Reserve a certain number of 128-bit samples.
  // This function is thread safe.  The returned generator is valid for the
  // given number of samples, and can be used without a lock.</doc>
<use f='tensorflow/tensorflow/core/kernels/parameterized_truncated_normal_op.cc' l='349' u='c' c='_ZN10tensorflow12_GLOBAL__N_130ParameterizedTruncatedNormalOp7ComputeEPNS_15OpKernelContextE'/>
<def f='tensorflow/tensorflow/core/util/guarded_philox_random.cc' l='46' ll='52' type='random::PhiloxRandom tensorflow::GuardedPhiloxRandom::ReserveSamples128(int64 samples)'/>
